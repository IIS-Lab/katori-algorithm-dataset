time,personID,problemID,1st,1st_reason,2nd,2nd_reason,3rd,3rd_reason,others,understanding,free
1/2/2023 21:45:05,11,1,8,指定された条件を満たす限り，列の中においてみる範囲を増やしていくという方針が表れている箇所だと思ったから,2,選択した範囲の積に注目しており，積の特性である一つでも0であれば0になることに気づいているから．基本方針ではないので一番に選びませんでした．,12,列の範囲を拡大していく中でこの処理をする必要がある．毎回ではなく，列の長さが0のときだけの処理なので3番目にしました．,,とても理解できた。,
1/2/2023 22:11:58,11,2,7,問題設定よりセグ木を使うことことで解答可能だと判断できる．セグ木のデータ構造を作成している行だから．,21,ツリー上で列の和を管理するデータ構造の要となる処理をしているところだと考えました．,29,合計の値を取得する操作をしている箇所で，これも2番目に選んだ箇所と同様，データ構造特有の操作であるから．2番目と同列に考えています．2番目が一つしか選べなかったので3番目になりました．,,とても理解できた。,
1/2/2023 22:48:08,11,3,5,ありえる要素の値がインデックスとなった計数のための場所をあらかじめ確保しておくことがこのソートの要だと考えたから,12,要素の値が小さいほうからソートした配列が格納されるリストにいれている行だから．計数しているところではないので2番目にしました．,9,インデックスを動かしていく変数をもつのもコードのわかりやすさのために大事かなと思いました．別の書き方もでき，計数ソートの本質ではないので，3番目になりました．,,とても理解できた。,
1/3/2023 2:14:13,11,4,19,左の子には小さく，右の子には大きいという木の性質をつかって探索している行だから．,1,木を作る上で大切な右と左の子をもつ要素を定義している箇所であるため．実際に探索している箇所の方が重要かなとおもったので2番目にしました．,32,"nodeの情報を表現する方法としてinorder,preorderという概念があることは大事だと思います．一方で探索木をどう表そうとも載ってる情報の内容が変わるわけではないので3番目にしました．",,とても理解できた。,
1/3/2023 5:06:13,11,5,19,再帰にすることでDFSを実装しているので自身を呼び出すところが重要だと思いました．,20,"完了時刻を求めないといけないので，自身を呼び出した後で時間を計測している箇所を選びました．再帰がどういう操作になっているかを理解していないと，この場所に書けないと思いました．
完了時刻は必ずしも問題にならないので2番目です．",17,"到達したところを管理しておかないと無限におわらなくなってしまうので，大切です．
DFSする上で注意するポイントという位置付けで，DFSそのものからは外れるかなと思ったので，3番目です．",,とても理解できた。,
1/3/2023 5:11:59,11,6,10,dpテーブルの更新を行なっていくところであるから．漸化式をどう定義するか考えるのがDPの一番の要点だと思います．,7,この問題を二次元リストで管理するという発想自体が大事だと思います．どう管理するかは1番目にあげたので，2番目には構造をあげました．,12,最終的に欲しい状態がテーブルの中のどこに存在しているかを把握するのは大事だと思います．どこを見るかよりも情報自体を作るのが大事だと考えたので，3番目にしました．,,とても理解できた。,
1/3/2023 5:20:33,11,7,9,"""2""つにわっているところだから．この操作のおかげで高速に探索できるようになっているため．",8,探索を終える条件を把握することは大事だと思います．操作を終える条件であり，操作そのものではないので2番目にしました．,6,"ng,okで確実にそうだといえる範囲のインデックスを指すことは重要です．前二つに比べるとちょっとしたポイント感が強くて本質からちょっと離れたところにいるイメージがあります．",,とても理解できた。,
1/3/2023 5:31:21,11,8,4,queueというデータ構造はかなり重要だと思います．クラス名を定義している行を選びました．,20,取り出した後インデックスを一つ進めて，先頭を移動させています．modをとって有限のリストを活用しているのも大事だと思います．queueのあくまで一部分なので2番目です．,8,初期状態をhead>tailなのはこのコードを書く上で間違えやすいかなと思ったので選びました．別の書き方もできるので3番目です．,,とても理解できた。,
1/3/2023 5:39:07,11,9,21,modにおいて割り算をするときにmod-2乗と同等という知識は大事かなと思います．,7,繰り返し自乗法の要だと思ったからです．この問題の条件がゆるゆるであれば必要なくなるので2番目にしました．,13,繰り返しつかうfactorialを切り出して関数にもっておくのは大事だと思います．この問題特有の話ではないので3番目です．,,とても理解できた。,
1/3/2023 5:44:19,11,10,12,遷移のもととなる漸化式さえたってしまえばDPはほぼ解けた気持ちになるからです．,6,初期状態を決めている箇所だから．0文字のときはもう一つの文字列サイズに依存することを利用している．ここだけわかっても遷移できないので，2番目です．,14,最終的に答えないといけないところはテーブルの中でどの箇所なのか把握することは大事だと思います．そもそもテーブルが作れないと意味ないので3番目です．,,とても理解できた。,
1/3/2023 6:00:57,11,11,5,ある基準点をつくってその点より上か下かで整列していくというソートの初歩であるため．,15,まさに順序が逆転している箇所を入れ替えている行だから．pivotの概念よりはこのアルゴリズムにとくゆうではないから2番目です．,13,終了条件を正しくかかないと不具合がおこるため．アルゴリズムの本質からはなれるように感じたので3番目です．,,とても理解できた。,
1/3/2023 6:10:13,11,12,20,このデータ構造において，2で割っていくことで高速に最小値を更新できることが最大の強みだと思います．,7,セグ木の初期状態を最小が問題になっているのに合わせてinfでつくっている.長さが2^n-1のリストという点でも大事だと思います．どう更新するかの方がこの問題に特有だと感じたから2番目です．,29,探索の方法として，このような範囲を絞っていく再帰の関数をつくるのは重要だと感じます．2で割っていく箇所は1番目で触れたのでその要素を抜いて考えた時に3番目くらいの重要さかなとおもいました．,,とても理解できた。,
1/3/2023 6:22:25,11,13,27,重さの小さい辺から取っていけば，最小全域木ができるのは重要な事実だと思います．,32,Unionfindですでにつながっているかを判断している大事な箇所であるとおもいます．つながっているかのあくまで道具としてつかっているので2番目にしました．,4,rankをもつことでunionfindの構造を工夫して高速な処理をできる．unionfindのさらに細かい中身の話なので3番目にしました．,,とても理解できた。,
1/3/2023 6:28:24,11,14,5,リストを分けてそれぞれでソートするという考えが表れているように感じたから．,11,それぞれのリストを見て大小を比較していることがわかる行だから．分けて比べる再帰をしている方がより重要だとおもったので2番目です．,18,2つのリストを比べた時にどちらかは最後まで見れてないので，その分の処理が必要だとわかる箇所．後処理的な位置付けだと思うので3番目に選びました．,,とても理解できた。,
1/3/2023 6:38:04,11,15,7,その辺を選んだ時両端のノードの情報がどう変わるかという，辺の重みの更新方針がわかる一行だと思えるからです．,5,全てのノードを出発点にして同じ操作をするということが表れている箇所だから．ノードの情報が書き変わる部分の方がなんとなく重要に感じてしまいました．,9,負閉路がないか確認できる嬉しい箇所であるから．最短経路検出できない->負閉路という順序であり，主役は最短経路の方だと感じるので3番目です．,,とても理解できた。,
1/3/2023 6:47:11,11,16,6,挿入することで，一つずつ横にずれていくことがわかる行であるから．,5,一つ後ろ倒しにしていく条件が定められている箇所だから．実際に操作をしているほうが重要に感じたので2番目にしました．,2,前から一つずつみていくことがわかる一行だと思います．どっち方向から見ていくかはあまり大事でないので，3番目にしました．,,とても理解できた。,
1/3/2023 6:57:03,11,17,10,次に確定させるノードを決める時に，未確定かつ最短でいけるところを選ぶという方針がアルゴリズムにおいて大事な点だと感じました．,19,辺の重みを更新している箇所なので重要に感じました．ダイクストラならでは操作というわけではないので2番目にしました．,21,距離が確定したところを保持しておかないと次のノードが決められないから．アルゴリズムの探索手法に付随する処理感が強いため3番目です．,,とても理解できた。,
1/3/2023 7:06:31,11,18,16,シェルソートで，間隔がhでソートしていることがわかる一行だから．,14,挿入ソートと同じようにソートをやっているのがわかるから．シェルソートの特色は間隔をあけることなので2番目です．,5,hの幅を決めている箇所だから．hの幅の決めかたは様々にあるので，3番目の重要度にしました．,,とても理解できた。,
1/3/2023 7:19:06,11,19,14,文字列のハッシュをとることで同じ文字列かを比べるアルゴリズムの核だと感じたから．,21,見る文字列をスライドしていくたびに，ハッシュの更新をしている箇所だから．,1,基底を変数で持つと見やすくなるから．絶対に必要な工夫ではないので3番目にしました．,,まあ理解できた。,
1/3/2023 7:28:16,11,20,17,逆方向に走査していることがわかるから．バブルソートとの違いが大事だと考えました．,14,大小を連続する2つの要素間で比べていることがわかるから．バブルソートでも同じことをしているので2番目にしました．,12,調べる範囲を狭めていることがわかるから．ここは本質というよりは工夫に近いと思ったから3番目です．,,まあ理解できた。,
1/3/2023 7:33:13,11,21,22,逆ポーランド記法をstackで処理しようと発想したところが大事だと思います．そこが反映されている箇所を選びました．,12,頭から入れる構造になっているのがqueueと違うところなので選びました．stackの実装というより細かい話になるので2番目にしました．,25,逆ポーランド記法をstackを使いながらうまく処理している箇所の冒頭をえらびました．stackを作ることにより重点があると考えたので3番目にしました．,,とても理解できた。,
1/3/2023 7:37:16,11,22,2,最大公約数がこのように再帰を使って求められることは重要な事実だと思います．,6,最大公倍数が積を最大公約数でわると求められることは大事だと思います．gcdを求めるよりも簡単な知識だと感じたので2番目にしました．,5,短いコードなので仕方なく選びました．そんなに重要だとは思っていないです．,,とても理解できた。,
1/3/2023 7:41:36,11,23,12,倍数に対して素数でないことをメモしている箇所が要だと思ったため．,6,"0,1は素数ではないので，初期条件として自分で入れてあげる必要がある．前処理のような意味合いが強く感じるため2番目にしました．",28,累積和を使ってある区間の和を求めている箇所．素数判定の方が重要だと考えたので，3番目にしました．,,とても理解できた。,
1/3/2023 7:47:35,11,24,14,トポロジカルソートにおいて，入字数が0のものから処理していくことが大事であると感じたから．,21,ノードを見ていくごとに，入次数は減少させる必要があり，その操作を表しているから．1番目の0のものを見ていくという強い意思があっての入次数管理なので2番目にしました．,8,あらかじめ入次数を数えておくことは大事です．前処理のような雰囲気を感じたので3番目にしました．,,とても理解できた。,
1/3/2023 7:51:49,11,25,11,入った方早い順序から出していくのがbfsの大事なところだと考えました．,13,まだ見ていないところに絞って探索しないと時間が無限にかかってしまいます．本質からちょっとだけ離れている気がするので2番目にしました．,14,次に見るノードは今見ているノードよりも距離を1増やしてい口方針が大事だとおもいます．距離は1じゃなくなったりするので，3番目にしました．,,とても理解できた。,
1/3/2023 7:56:21,11,26,5,i->jの距離を間の中間地点kを確実に通った時に短くなるかどうかを見ていくのは大事な考え方だと思います．,2,kが一番外側に来ることが大事だと思います．実際に更新してる箇所の方がより本質に感じたので2番目にしました．,18,初期値をINFにしているところが大事だと感じました．前処理感がつよいので3番目にしました．,,とても理解できた。,
1/3/2023 8:10:56,11,27,10,ハッシュテーブルに登場した要素を持っておくことで高速に調べられるので重要だと思います．,8,ハッシュが埋まっていた場合に隣に移動するという考え方が大事だと思いました．必ずしも隣である必要はないので2番目にしました．,20,hashで調べた上で合致していたら同一とみなす手法は高速に調べられるので大事だと思います．ハッシュテーブルを検索するよりも，構築する方法がより大事に感じたので，3番目にしました．,,とても理解できた。,
1/3/2023 8:21:00,11,28,20,最短経路を求める時の更新の仕方が表れている一行であると考えたから．,21,まだ訪れていない箇所に対して探索を進める方針が大事だから．下支えのような工夫だと感じたので2番目にしました．,25,負閉路を検出できるのは嬉しいポイントであるから．副次的な印象をうけるので3番目にしました．,,まあ理解できた。,
1/3/2023 8:34:43,11,29,13,DP問題で遷移式がかければほぼ解けたような感覚があるので大事だと思います．,12,価値の合計値が10000を超えないことを利用して問題を解いているため．DPテーブルを埋めるの方が重要だと感じたので2番目にしました．,7,できるだけ小さい方が嬉しいパラメータの重さをINFで初期化していることが大事だと感じた．あくまで前処理の域を出ないと思うので3番目にしました．,,とても理解できた。,
1/3/2023 8:39:22,11,30,12,最短距離が最も短い頂点を取り出すことがダイクストラにとって大事だと感じました．,23,距離が小さくなっていたら更新する箇所を選びました．どの探索候補を選ぶかの方が自明度が低いと思ったので，比較して2番目にしました．,16,確定済みかを把握しておくのは大事なので選びました．どちらかというと工夫に近いのかなと感じたので，3番目にしました．,,とても理解できた。,
