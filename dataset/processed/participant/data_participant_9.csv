time,personID,problemID,1st,1st_reason,2nd,2nd_reason,3rd,3rd_reason,others,understanding,free
12/15/2022 18:51:04,9,1,8,尺取り法における、範囲を伸ばせる条件を指定しており、この部分の判定が正しいかどうかが、アルゴリズムが正しく動くための核であると考えたから。,11,答えの値の更新を行っており、これが無いとアルゴリズムが正しい答えを返さないから。ただし、この部分はアルゴリズムの核とは言えないため、1番ではないと考える。,2,配列の値の中に0があった場合というコーナーケースに対する例外処理を行っており、これがないとコーナーケースに対して正しい値を返さないから。ただし、この部分はメインのアルゴリズム部分ではないため、重要度は先ほどの2つに比べると落ちると考える。,12行目。細かいところではあるが、尺取り法における左のポインタと右のポインタが等しい値を指したときの処理を行っており、アルゴリズムを実装する上では大事な要素となる。,とても理解できた。,
12/15/2022 19:24:06,9,2,29,セグメント木における一番大事な要素は、区間和の計算方法であり、中でも左半分の区間の結果と右半分の区間の結果をマージすることを再帰的に繰り返すことで出来る、ということが最も大事な要素と考えている。29行目はまさしくこのことを表している行であるから。,27,区間和の計算において、今見ている区間が求めるべき区間にすべて含まれる場合は今見ている区間の結果をそのまま返す、ということが計算量削減のために重要であるから。ただし、このことは左半分の結果と右半分の結果をマージする、ということが前提となっているため、あくまで1番ではないという立ち位置でいる。,21,セグメント木においては一点更新の仕方が区間和の処理の仕方の次に重要なポイントであると考えており、21行目はまさしく一点更新の仕方を言い表しているから。,3～6行目。セグメント木のサイズを2のべき乗にするという処理を行っている行であるため。,とても理解できた。,
12/15/2022 20:01:50,9,3,7,計数ソートのエッセンスは、「何の要素が何個ある」という配列を組み立てる部分だと考えており、7行目はそれを言い表したものだと言えるから。,12,12行目の処理は配列に計数ソートの結果を小さい順に並べる部分の処理であり、この処理は結果を正しく返す上では大事であるから。アルゴリズムの中心の部分ではないため、この部分は2番目に重要である。,13,インデックスを1ずつ進める箇所も、アルゴリズムを正しく動作させるという処理の一部分では重要であるから。あくまでアルゴリズムの本質の部分ではなく、処理の一部分にすぎないため、この部分は3番目に重要であると考えている。,,とても理解できた。,どこが大事な箇所なのかは比較的早い段階で思いつくのですが、その中での順位付けをするのが大変だと感じます。
12/15/2022 20:46:05,9,4,19,いま見ているノードよりも値が小さいときには左のノードに進むことを表す処理を表す箇所であり、二分探索木の作り方を分岐によって表現する点で重要であると考えている。,21,二分探索木に値をセットするところであり、左のノードに進んだときに値が存在しなければそこに置く、という処理を表す箇所であり、二分探索木の進む方向を決めた後の処理を表現している点で、進む方向を決める処理の次に重要であると考えている。,32,二分探索木の巡回を、再帰によって行うことを表しているから。この問題では二分探索木の構成が本質であると考えているため、先述の2つよりは重要度は低いと考えている。,"15行目。二分探索木に値がまだ入っていないときの処理を、別途場合分けによってあらわしている点で重要だと考えている。
24・26行目。それぞれ「一番大事な処理」「二番目に大事な処理」を左に進む場合で述べたが、右に進むの場合も当然重要である。
33・34・38～40行目。「三番目に大事な処理」を32行目で述べたが、これらの行も同じく二分探索木の巡回を再帰によって行うことを表しており、重要である。",とても理解できた。,「左と右」や「通りがけ順と行きがけ順」のように、重要な行の中に2つのものが並列で並んでいるような箇所があり、それらの順位付けの扱いをどうするのかが非常に難しいと感じました。
12/15/2022 20:54:01,9,5,19,深さ優先探索の方法（今いる頂点と隣り合っている頂点の再帰呼び出し）を表しており、アルゴリズムの本質部分であるため、最も重要であると考えている。,17,深さ優先探索で、一度訪れた頂点を訪れないようにする処理が書かれており、探索が終わらないことを防止する役割があるから。ただ、探索の方法のほうが重要であると考えているため、1番大事というわけではないと考えている。,15,訪れた時間帯を記録する箇所であり、結果を出力する上では大事であるが、アルゴリズムの本質部分ではないから。,20行目。15行目同様に、訪れた時間帯を記録しているため、15行目と同じく重要である。,とても理解できた。,
12/15/2022 20:59:02,9,6,10,DPの遷移を表しており、DPの問題においては遷移が最も大事な箇所であると考えているから。,7,DPの初期値を表しているから。DPの問題においては初期値が遷移の次に大切であるので、この順番である。,12,DPテーブルの中で、答えが格納されている場所を表しているから。DPテーブルの中でこの場所に答えが格納されていることは、DPテーブルが正しく更新されたことが前提であるため、優先順位は前者二つに比べると低くなる。,,とても理解できた。,
12/16/2022 18:13:26,9,7,2,二分探索の中において、判定の条件を関数化したものであり、ここが間違っていると二分探索が正しく動作しないという点で一番大事なポイントだと考えているから。,8,二分探索における終了条件を明記しており、ここが正しくないと正しく終了しないため。判定の条件とは違い、問題によって異なるような箇所ではなく、常に同じような処理をする箇所であるため、1番ではないと考えた。,10,データが配列の中に見つかった場合にTrueが返せるような処理を別立てで行っている箇所であるから。この部分は今回の問題特有の箇所であり、一般の二分探索の問題で現れる箇所ではないため、1番や2番ではないと考えた。,16行目。この部分では、データが見つからなかった場合にFalseを返しており、10行目同様に重要だと考えた。,とても理解できた。,
12/16/2022 18:31:40,9,8,37,キューを用いてラウンドロビンのシミュレーションを行う部分であり、この部分の処理が間違っているとシミュレーションがうまくいかないことになり、問題の本質部分に関わっているといえるから。,14,リングバッファ方式でキューの末尾を伸ばしていく処理を行っており、この部分が正しくないと正しくキューが動作しないため。キューの実装箇所であるため、この問題特有の処理ではないと考えたため、1番とはしなかった。,24,キューが空であることの条件を書いており、この部分が正しくないと正しくプログラムが終了しないため。キューの実装の本質部分ではないと考えたため、1番や2番とはしなかった。,20行目。キューの先頭を縮める処理を行う箇所であり、14行目同様に、キューを正しく動作させる上では欠かせない箇所である。,とても理解できた。,
12/16/2022 18:49:19,9,9,21,この問題の本質は経路数を二項係数を用いてどのように計算するかというところにあり、逆元を用いた二項係数の計算を行っているこの箇所が、まさしく本質的な箇所であるといえるから。,7,繰り返し二乗法を用いて累乗を高速に計算する処理において、nを半分ずつにしていくことで高速な計算を実現していることを表している箇所であるから。問題の本質的な箇所というのではないため、1番ではないと考えた。,9,繰り返し二乗法を用いて累乗を高速に計算する処理において、nが奇数のときに行う処理を表しているため。この処理はnが偶数のときには出てこないこともあり、1番目や2番目にはならないと考えた。,"16行目。二項係数の計算に用いられる階乗の計算の処理を行っている行であるから。
25行目。今回の問題における経路数の式を表しており、ここを間違えると答えが合わないから。",とても理解できた。,
12/16/2022 18:55:03,9,10,12,レーベンシュタイン距離を求めるDPにおける遷移を表しており、ここを間違えるとDPが正しく動かないから。,6,DPの初期値を格納している箇所であり、遷移ほどではないものの、DPの結果を正しく出すためには必要な箇所であるから。,14,答えがDPテーブルの中のどこに現れているかを表しているから。DPの答えが正しく求められるには、遷移や初期値が正しいことが前提であるため、遷移や初期値ほど重要ではないと考えている。,8行目。ここも6行目と同様にDPの初期値を格納している箇所であるため重要である。,とても理解できた。,
12/16/2022 19:13:54,9,11,15,左側にある、ピボットより大きい値と、右側にある、ピボットより小さい値を、スワップする箇所であり、この部分がクイックソートの処理の本質部分であるといえるから。,19,配列の中のより小さい部分に対してクイックソートを再帰的に行っている箇所であるから。ソートの本質である「並べ替え」を表す箇所ではないと考えているため、1番ではないと考えた。,2,クイックソートが終了する条件を表しており、ソートの本質部分ではないものの、プログラムを正しく動作させる上では重要な箇所であると考えたから。,20行目。19行目同様に、再帰的に呼び出してクイックソートを行うことを表している箇所であるため大切である。,まあ理解できた。,
12/20/2022 1:31:23,9,12,29,セグメント木において、区間の最小値の取得は左の区間と右の区間の最小値であることを再帰的に繰り返して求める、ということが重要であると考えており、29行目はまさしくそのことを述べているから。,27,区間が丸ごと含まれている場合の、区間最小値の処理が述べられているから。これは左の区間と右の区間の最小値を再帰的に求めることが前提となっているため、1番ではないと考えた。,21,セグメント木における一点更新の処理が述べられている行であるから。一点更新の処理は区間の最小値を求める処理ほどは重要でないと考えているため、1番や2番ではないと考えている。,7行目。区間最小値を求めるセグメント木では初期値をinfにするのが大切であるから。,とても理解できた。,
12/20/2022 1:40:29,9,13,34,最小全域木を求めるには、採用する辺を用いてグラフを連結する、という処理が最も大切であると考えているから。,32,その辺を採用するかどうかの処理は、その2点が連結ではないということを述べている行であるから。グラフの連結を行うことが前提となっているため、1番ではないと考えた。,27,最小全域木を求める前段階の処理として、辺の長さでソートする、ということをしないと正しい結果を返さないから。実際に木を作る部分ではないため、この部分の処理は1番や2番ではないと考えた。,"18, 22, 23行目。Union Find 木の計算量を落とすための工夫として、木にランクをつけていることを表す行であり、ここを間違えたとしても正しく動かないことはないものの、計算量が大きく落ちてしまうから。",とても理解できた。,
12/20/2022 1:48:11,9,14,11,左の値と右の値を比較して、小さいほうを先に配列memに格納することを表しており、この部分が配列をソートできることの本質であるから。,5,マージソートが再帰的に左半分の要素と右半分の要素を呼び出していることを表す行であるから。配列をソートできることの本質部分ではないため、この部分は1番ではないと考えている。,10,左右どちらかの要素がなくなったら処理を終えることを表している行であるから。実装上の問題であり、アルゴリズムの本質部分とは言いにくい部分なので、この順位と考えている。,"6行目：5行目と同じく、再帰的に求めることを表しているので、重要だと考えている。
18～21行目：左右どちらかの要素がなくなった場合、なくなっていない方の要素の残りを入れることを表しているため、重要だと考えている。",とても理解できた。,
12/20/2022 1:53:01,9,15,8,最短経路を更新する行であり、ここがないと最短経路が更新されず、アルゴリズムが全く動作しないから。,7,最短経路の更新条件を表す行であり、条件を間違えると正しく動作しないから。最短経路の更新の操作を直接行う行ではないため、重要度は2番目と考えている。,9,負閉路検出条件を表している行であるから。負閉路は検出が行われない場合もあるため、前2つに比べると重要度は下がると考えている。,,とても理解できた。,
12/20/2022 2:00:32,9,16,5,挿入ソートにおいて、選んだ要素をどこに挿入するべきかの条件を表す行であるから。左が右より大きい間はカーソルを左にずらすというのが、ソートアルゴリズムの本質部分であるため、一番重要と考えている。,6,実際に数列の値をひとつずつずらしている処理を表しているから。前の条件を受けて、それに応じてずらす処理を行っているので、1番目ではないと考えている。,8,最後に、最初に選んだ値を実際に挿入する箇所を表しており、ここが間違っていると正しく動作しないから。先ほどの2つに比べると本質ではないため、この部分は1番目や2番目ではないと考えている。,,とても理解できた。,
12/20/2022 2:07:20,9,17,19,最短経路の更新を行っている行であるから。ここが動かないと正しく動作しないため、最短経路を求めるアルゴリズムではここが最も重要と考えている。,12,次に選ぶ頂点を決めている行であり、ここが動作していないと次に選ぶ頂点がわからないから。直接最短経路の更新をする行ではないため、あくまで1番ではないと考えている。,10,次に選ぶ頂点を決める際の条件を決めている行であり、ここが動作していないと次に選ぶ頂点がわからないまま処理が終わらないことになりかねないから。実際に頂点を決めているわけではないので、あくまで2番目よりは重要度は落ちると考えている。,"2行目。初期値を設定している行であり、ここを間違えると正しく動作しないから。
4行目。既に見たかどうかの配列を確保している行であり、これを行わないとプログラムが終わらないから。",とても理解できた。,
12/20/2022 12:23:19,9,18,5,シェルソートにおける、hを決めている箇所であり、ソートの間隔を設定するというシェルソート特有の処理を決めている箇所であるから。,18,シェルソートにおいて、間隔を狭めている箇所であるから。間隔を決めた上でその後で狭めているため、間隔を決めている行ほどは大事ではないと考えている。,14,シェルソートにおいて、挿入ソートと同じようにデータの大小に応じて入れ替えを行っている箇所であるから。挿入ソートと同じ箇所ではあるため、1番重要というわけではないと考えている。,,まあ理解できた。,
12/20/2022 12:26:30,9,19,21,ハッシュの更新を行う箇所であり、ここの更新がローリングハッシュで計算量を落とせる本質の箇所であるから。,14,ハッシュの値の初期値を設定する箇所であるから。計算量を落とす核心の部分ではないため、1番ではないと考えている。,22,文字列の照合条件を、ハッシュの照合条件とみなして判定する箇所であるから。ハッシュの計算箇所ではないため、重要度は下がると考えている。,,とても理解できた。,
12/20/2022 19:22:39,9,20,8,合っていない部分を入れ替えるために、大きさを比較する部分であり、ソートの本質部分であるから。,12,カーソルを左から右に切り替える場面であり、なおかつカーソルの右端を左に動かすことでアルゴリズムの流れに大きく関わってくる場面であるから。実際に入れ替えを行う箇所ではないため、1番ではないと考えている。,11,スワップする位置を1ずつずらしている箇所であるから。バブルソートでも行われ、シェーカーソート特有の処理ではないため、3番目と考えている。,,まあ理解できた。,
12/21/2022 2:13:03,9,21,27,逆ポーランド記法における足し算の計算を、スタックから値を取り出すことで行っている箇所であるから。,32,逆ポーランド記法において、数字が出てきたらスタックにその値をそのまま格納すればよいことが表されているから。実際に計算する処理を行う箇所のほうが大事だと考えているので、1番にはしなかった。,35,"最後に答えの値を取り出す処理が書かれているから。これは処理の核心の部分ではないため、1,2番目とはしなかった。",29・31行目。逆ポーランド記法における引き算、掛け算の計算結果の求め方が書かれているので、足し算同様に重要と考えている。,とても理解できた。,
12/21/2022 2:49:07,9,22,2,最大公約数をユークリッドの互除法を用いて求めている行であるから。最小公倍数を求めるには最大公約数を求める必要があるため、最大公約数を求めることがこのコード内で最も重要だと考えている。,6,最大公約数を用いて最小公倍数を求めている行であるから。最小公倍数の求め方は最大公約数が求まっていれば簡単な式で求められるため、1番ではないと考えた。,1,gcd関数の定義について述べている行であるから。実装上のちょっとしたポイントであるため、1番や2番ではないと考えた。,,とても理解できた。,
12/21/2022 3:02:49,9,23,18,エラトステネスの篩で素数判定を行い、それをテーブルに持つ処理を行う行であるから。今回の問題では10^5以下の素数の値が全て求まっている必要があるので、素数判定を行った結果を配列に格納する箇所が、最も重要であると考える。,22,その数が2017に似た数であるかどうかを判定する箇所であるから。素数判定の結果を用いて2017に似た数かどうかの判定を行うため、素数判定の結果が前提と考え、1番とはしなかった。,22,累積和配列を構築するパートであるから。これは素数判定と2017に似た数の判定が前提となっているため、重要度は1番目、2番目に比べると下がると考えた。,4～15行目：実際にエラトステネスの篩を用いた素数判定を行っている箇所であるため、ここの行も重要だと考えている。,とても理解できた。,
12/21/2022 3:11:57,9,24,14,入次数が0の頂点を、ソート済み配列とキューに入れる箇所であるから。トポロジカルソートでまず最初にやるべき要点を記述してある行であると考えており、一番重要だと考えている。,21,見た頂点の入次数を1減らす処理を行っているから。入次数が0の頂点を入れる次に行うべき処理の要点を記述してある行と考えており、2番目に重要と考えている。,19,"一度見た頂点をキューから取り除いているから。これは実装上の注意点であるため、1,2番目ほどは重要ではないと考えている。",,とても理解できた。,
12/21/2022 3:18:19,9,25,14,今見ている頂点から直接たどり着ける頂点に対して最短距離の更新を行っている行であるから。最短距離の更新を直接行っている行であるため、ここが一番大事と考えている。,13,一度見た頂点を二度と見ないような処理をしている行であるから。最短距離の更新を本質的に行う行ではないため1番大事というわけではないが、これがないと無限ループが起こってしまうため、2番目に大事と考えている。,8,最初に訪れる頂点をキューに入れる行であるから。少しの実装上の注意点なので1番や2番というわけではないものの、これがないと全く探索が行われないので、3番目に重要だと考えた。,,とても理解できた。,
12/21/2022 3:23:32,9,26,5,最短経路の更新を行っている行であるから。ここがなかったり、間違ったりしていると正しく動作しないため、ここが一番大事と考えている。,2,最初にkに関してループを回すことを表している行であるから。直接最短経路の更新を行う行ではないものの、ここの順番を間違えていると正しく動作しないため、この順番でやることが大切だと考えている。,8,負閉路検出の条件を表している行であるから。負閉路検出は必ず毎回登場するとは限らないため、ワーシャルフロイドで常時注意する必要がある1番目や2番目よりは重要ではないと考えている。,,とても理解できた。,
12/21/2022 3:30:25,9,27,6,ハッシュ化されたxを求める行であるため。今回のハッシュ探索ではxをある値で割った余りをハッシュの値として用いることを示しているため、全ての前提となっていると考え、一番大事と考えている。,8,ハッシュ化されたxに対して、どこに値を挿入するかを表す行であるため。ハッシュ化されたxが前提となっているため、ハッシュ化されたxを求めることの次に重要であると考えた。,7,ハッシュ化されたxに対して、空きが見つかるまで1を足し続けることで格納する場所を見つけようとしていることを表す行であるから。1を足し続けることは本質ではないため、1番や2番ではないと考えた。,15～17行目：値を格納するだけでなく、検索するときも格納するときと同じ処理を行うことを表しており、格納するとき同様に重要と考えている。,とても理解できた。,
12/21/2022 3:42:18,9,28,23,暫定的に、「まだ最短経路の更新がなされる可能性があるか」を「ある」に変えることを表す行であるから。ここで最短経路の更新可能性を更新することが、正しく最短経路の更新を行う上では重要と考えている。,17,暫定的に、「まだ最短経路の更新がなされる可能性があるか」を「ない」に変えることを表す行であるから。ここを更新することで、無駄な頂点を見ないようにすることが可能となり、速くアルゴリズムを作動させるためには重要と考えている。プログラムの速さに関する箇所であるため、1番重要というわけではないと考えている。,25,負閉路検出を行う行であるから。負閉路検出は必ずしも必要ではないため、1番や2番ではないと考えている。,,まあ理解できた。,
12/21/2022 3:45:34,9,29,13,DP遷移を表す行であるから。ここが全ての計算の核心の部分であるため、ここが最も大事と考えている。,9,DPの初期値を表す行であるから。初期値は遷移に比べると核心の部分ではないが、ここが間違っていると正しく動作しないため、ここは2番目に重要と考えている。,17,答えがDPテーブルのどこに現れるかを表す行であるから。直接計算に関わる箇所ではないため、1番目や2番目ではないと考えている。,,とても理解できた。,
12/21/2022 4:09:44,9,30,14,最短経路の更新を行う条件を表す行であるから。最短距離の更新を行う条件を指定するため、一番重要と考えている。,16,距離の情報と、頂点の情報を、（距離、頂点）の順に優先度付キューに入れることで、常に最短距離が最も小さい頂点のデータが取り出されるようになるから。更新を行う部分ではないため、1番ではないと考えている。,9,最初に始まりの頂点と、距離0のデータを優先度付キューに入れている行であるから。細かい実装上の注意ではあるため、1番や2番ではないと考えているものの、ここを行わないと全く最短経路が更新されないため、重要と考えている。,,とても理解できた。,このソースコードにあるダイクストラ法だと、途中（12行目と13行目の間）で枝刈りがなされておらず、最短経路でない古いデータに対しても続く箇所での処理を行ってしまっているため、最悪ケースで計算量が二乗オーダーになってしまいます。（もし仮に枝刈りの処理がソースコード内にあった場合、「ここがなくても正しく動作はするものの、最悪ケースでの計算量が悪くなってしまうから」という理由で、2番目に重要な行に選択していました。）
