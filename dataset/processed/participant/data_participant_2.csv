time,personID,problemID,1st,1st_reason,2nd,2nd_reason,3rd,3rd_reason,others,understanding,free
12/15/2022 10:52:01,2,1,8,この問題はしゃくとり法を用いて解くことができるが、そのしゃくとり法の繰り返しを行なっている部分であるから。,12,同じくしゃくとり法のインデックスに関する部分で正しく場合分けしないといけないため重要であると考えられるが、複雑さでいえば8行目より少ないから。,2,配列に0があるときのみコーナーケースとして処理する必要があり、大枠としては関係ないが、問題を解く上では必要である処理だから。,,とても理解できた。,
12/15/2022 11:00:22,2,2,29,問題のクエリに答える部分である、区間和を求める計算のメインがこの部分であるから。,21,問題に答える部分ではないが、問題の指示として出てくる配列の一点更新を行う計算のメインがこの部分であるから。,14,問題を答えるわけでもなく、問題の指示として陽に出ているわけでもないが、これからの計算をするうえでの準備をしている行であるから。,,まあ理解できた。,
12/15/2022 11:09:03,2,3,10,計数ソートの重要なアイデアとして、同じ数字をまとめて処理する、という部分があり、そのまとまて処理している部分であるから。,7,計数ソートというアルゴリズムの通り、数を数えて行うソートだが、その計数の部分を行っている行であるから。,12,複雑ではないが、計数ソートの答えを求めている部分であるから。,,とても理解できた。,
12/15/2022 11:14:47,2,4,19,データ構造の重要な部分であるinsertにおいて、値が現在のノードより小さいときは左に入れる、という処理を行なっている部分であるから。,24,データ構造の重要な部分であるinsertにおいて、値が現在のノードより大きいときは右に入れる、という処理を行なっている部分であるから。19行目より後に出てきているので、こちらを2番にした。,14,insertする本質とは関係ないが、実際にはこれがないと一番最初にエラーが起きてしまうので、そのコーナーケースを処理する部分として重要であると考える。,,まあ理解できた。,
12/15/2022 11:20:40,2,5,19,DFSは再帰関数を用いて実装することが多いが、その再帰関数を呼び出している部分であるから。,14,この問題では入った・出た時刻を答える必要があり、その時刻を再帰関数を呼び出しても正しく動作するようにグローバル変数として宣言している部分であるから。,5,グラフの隣接リスト表現を配列Gに作っている部分であるから。直接問題を解く部分ではないが、グラフの扱い方の知識としては重要であると考えた。,,とても理解できた。,
12/15/2022 23:10:54,2,6,10,ナップサック問題の漸化式の部分であり、これのおかげで指数時間から改善することができているため。,7,動的計画法をつかうことにより、O(NW)で求めることができるが、そのdp配列を宣言していることも大切であると考えた。(dpの本質部分ではないので2番目。),5,10行目と7行目が最も重要な部分であるが、一応入力をしないと問題は解けないので、5行目が次に大切。,,とても理解できた。,
12/15/2022 23:23:27,2,7,9,"""二分""探索という名前のアルゴリズムなので、変数midを宣言してその判定問題に落とし込んでいる部分が最重要であると考えた。",12,その二分探索の判定問題を解いている部分なので、アルゴリズムの本質部分に次いで、問題を解くという意味で重要であると考えた。,8,二分探索は終了条件をきちんと指定しないと正しく収束しなかったり、計算が終わらなかったりするので、細かい部分ではあるが、上の2つの行に次いで重要であると考える。,,とても理解できた。,
12/15/2022 23:29:20,2,8,14,queueは配列を円環状に使い回しながら先頭と末尾の座標を持って実現するデータ構造であるが、その末尾の座標を円環状に持っていることを表している部分だから。,20,14行目と同様に、円環状の配列の先頭を持っている部分であるので重要であると考える。20行のほうが後に出てきているので、2番目にした。,37,プロセスの残り時間で場合分けをしながらqueueを操作している部分で、データ構造の実現の方が本質であるとは思うが、問題解決部分の重要部分として3番目に重要だと考える。,,とても理解できた。,
12/15/2022 23:34:05,2,9,21,二項係数をもとめる必要がある問題だが、その二項係数の計算をしている部分であり、最重要であると考える。,4,二項係数を計算するには逆元を計算する必要があるが、そのためにはp-2乗を計算する必要があるので、powを計算する関数は次いで重要であると考えた。,25,問題の答えがdp等での数え上げではなく、二項係数で表すことができることを表しており、アルゴリズムの本質部分ほどではないが、問題を解く上では重要な観察が含まれていると考えた。,,とても理解できた。,
12/15/2022 23:37:51,2,10,12,動的計画法の漸化式の部分であり、この式を立てることができれば解けたも同然なので、1番大切であると考える。,14,dp配列の[len(s1)][len(s2)]番目が答えになるということはきちんと漸化式を理解していないとわからないはずなので、ここも漸化式そのものに次いで重要であると考える。,6,漸化式そのものや答えの部分ほどではないが、配列は適切に初期化しておかないと正しい動作をしないので、これが次いで重要であると考える。,,まあ理解できた。,
12/16/2022 21:20:26,2,11,9,ピボットを固定してピボットより左はピボットより小さく、右は大きくしたいが、そのswapを行うindexを決めている行であるから。,11,上と同様に、swapを行うindexを決めている行である。後に出てきたので2番目。,15,swapするindexを決めた上で、実際にそのswapをしている行であるから。indexを決める方が大事であると考えたので3番目にした。,,まあ理解できた。,
12/16/2022 21:24:52,2,12,21,一点更新区間minのセグ木の問題であるが、一点更新がlogオーダーでできる本質の行だと考えたので、ここにした。,29,区間minをlogオーダーで求めることができる本質の行であるから。更新できることが重要ポイントであると感じたので2番目にした。,14,セグ木の処理の初期化を行なっている部分であるので、これもクエリ処理に次いで重要だと考えた。,,まあ理解できた。,
12/16/2022 21:32:42,2,13,27,クラスカル法は連結かどうかで辺を追加するかどうかを決めるので、その連結判定の部分が最重要であると考えた。,32,クラスカル法は事前に辺のコストでソートしておくことで高速に求められるので、これが次に重要。,34,上と同様に連結判定を高速に行うためにUnion-Find木のmergeを行っている部分なので、重要であると考えた。判定そのものではなく判定のための操作なので3番目。,,とても理解できた。,
12/16/2022 21:49:32,2,14,5,配列を左右に分けてsortしてmergeするのがマージソートだが、左右に分けている部分だから。,6,配列を左右に分けてsortしてmergeするのがマージソートだが、左右に分けている部分だから。2番目に出てきたので2番目。,11,ソート列をマージしている部分なので、これが次に重要だと考えた。,,とても理解できた。,
12/16/2022 22:01:07,2,15,7,ぐるぐる回して最短距離が更新できるなら更新する、というアルゴリズムなので、距離更新できるかを見ている行が重要だと考えた。,9,V回ぐるぐる回しても最短距離の更新が起こる場合は負のサイクルがあるという意味なので、その検出を行っている行が次に重要であると考えた。,6,ぐるぐる回す部分でグラフの辺を全部見ている部分なので、直接的ではないが、残りの行の中では一番重要だと考えた。,,とても理解できた。,
12/16/2022 22:10:45,2,16,5,挿入ソートは配列を前から見ていってハマるところに挿入するアルゴリズムだが、ハマるところを探している行なので、最重要であると考えた。,6,挿入するためにいままで完成させた部分を後ろにずらしている部分なので、ここが次に重要であると考えた。,4,挿入する前に後ろに要素をずらしていくので、挿入する要素を覚えていかないといけないので、これも重要。サブ的な理由なので3番目。,,とても理解できた。,
12/16/2022 22:16:41,2,17,11,ダイクストラ法のキモは、最短距離が順々に確定させるところなので、その確定した部分を見つけ出す部分が最重要であると考えた。,18,最短距離が更新できるところがあれば更新していくのはダイクストラ法でもあいかわらず重要な位置を占めていると思う。キモは上のやつだと思うので、これは2番目。,21,使用済みの距離が確定した頂点はマーキングしておかないとtmp_min_distを決める際に困るので、アルゴリズムの中心部分ではないが、これが3番目であると考えた。,,とても理解できた。,
12/16/2022 22:23:22,2,18,18,シェルソートは挿入ソートの間隔をちょっとずつ狭めていくものなので、その間隔を狭めていっている部分が最重要であると考えた。,9,シェルソートは挿入ソートの幅が1になるまでやるので、その終了条件を書いている場所が狭める行に次いで重要であると考えた。,4,最初の挿入ソートの幅はなるべく広くとりたいので、これが甘くてもアルゴリズムは動くので重要度は下がるが、3番目には重要であると考えた。,,とても理解できた。,
12/16/2022 22:37:59,2,19,22,ローリングハッシュは、それぞれの文字列に対してハッシュ値を計算してそれが一致していれば文字列が一致していると判定するアルゴリズムなので、一致判定をしている行が最重要だと考えた。,21,文字列tのスタート地点をずらしたときのハッシュ値が高速に計算できることはアルゴリズムが高速に動くことにとてもよく貢献していると考える。ハッシュが文字列の一致判定に使えるというアイデアの方が中心であると感じたので、こっちが2番目。,7,細かい部分なので3番目にしたが、文字列の長さで場合分けをしておかないと、13行目のハッシュの計算で配列概算症を起こして困ってしまうと思うので、これも重要。,,とても理解できた。,
12/16/2022 22:26:32,2,20,7,シェーカーソートは左右にバブルソートをやるアルゴリズムで、幅が左右からどんどん狭まっていくのが特徴なので、右端をきちんと限定している行が最重要だと考えた。,13,シェーカーソートは左右にバブルソートをやるアルゴリズムで、幅が左右からどんどん狭まっていくのが特徴なので、左端をきちんと限定している行が最重要だと考えた。こちらの方が後に出てきているので2番目。,4,シェーカーソートの終了条件を表しており、上二つと比べると細かい部分だが、これを正確に指定しないと無限ループや微妙にソートされないなどがおこるので、3番目に重要だと感じた。,,とても理解できた。,
12/16/2022 23:54:55,2,21,27,逆ポーランド記法の処理はそれほど自明ではないので、その処理の部分を書いたここがこの問題の最重要ポイントだと感じた。,29,逆ポーランド記法の処理はそれほど自明ではないので、その処理の部分を書いたここがこの問題の最重要ポイントだと感じた。2回目の登場なので、2番目。,31,逆ポーランド記法の処理はそれほど自明ではないので、その処理の部分を書いたここがこの問題の最重要ポイントだと感じた。3回目の登場なので、3番目。,,まあ理解できた。,
12/16/2022 22:41:43,2,22,6,"この問題の答えが最小公倍数であるという考察、および最小公倍数がA * B / GCD(A, B)でもとまるという知識が両方含まれており、ぶっちぎりで重要な行。",2,最小公倍数を求めるために最大公約数を求める必要があり、それを再帰的に高速に求めている行なので、次に重要。,5,アルゴリズムのほうが重要だが、問題の数値の入力ができないと問題は解けないので、残った2行の中ではこっちの方が大切。,,とても理解できた。,
12/16/2022 22:51:02,2,23,21,L ~ Rで条件を満たすものの個数、というタイプのクエリに答える問題は累積和で考えると効率的に解けるので、そのアイデアを用いた部分を最重要だと評価した。,8,1 ~ 10^5の全部の数を素数判定する必要があるが、全部判定していると間に合わない。(10^5) ^ (1/2)までの数で試し割りすればいいという知見が出ている行なので、クエリの高速化に次いで重要だと考えた。,11,エラトステネスの篩のアイデアで、xが素数ならxの倍数は素数ではない、という操作をしている部分なので、重要。割と自明なアイデアだと感じたので3番目にしました。,,とても理解できた。,
12/16/2022 23:18:07,2,24,22,入次数が0である頂点を現在1番前の頂点としてsort済みの配列に入れていくというアルゴリズムなので、入次数が0という判定をしている部分が最重要だと考えた。,20,ソート済みの頂点から出ている辺を消していく操作なので、アルゴリズムのメインアイデアではないが、入次数を減らしていく部分なのでこれが2番目に重要だと考えた。,9,上で書いたソート済みの頂点から辺を消すための操作には、辺の情報を頂点に持たせておかないといけないので、ここが次に重要であると感じた。,,とても理解できた。,
12/16/2022 23:38:34,2,25,11,BFSは距離を近い順に確定させていくが、queueの先頭の要素がいまのところ一番近い頂点なので、その知見がふくまれたこの行が最重要。,14,まだ訪れていない頂点があったら、距離を確定させる操作がいるので、距離の確定をさせるこの行は重要。,23,隣接リストで表現しないと計算量が増えてしまうので、アルゴリズムの根幹ではないがこれはこれで重要だと考える。,,とても理解できた。,
12/16/2022 22:57:39,2,26,5,ぐるぐる回しながら最短距離が更新できるなら更新する、というのがワーシャルフロイド法なので、その更新している行が最重要だと考えた。,21,行列Gの初期値は基本的にinfだが、辺があるところは辺のコストにしておかないといけないので、アルゴリズムの直接的な部分ではないが、これも重要だと考えた。,23,同じくある頂点から同じ頂点までの最短距離は自明に0なので、これも例外的に初期化しておかないといけない。2番目の行より後ろの行なので、3番目にした。,,とても理解できた。,
12/16/2022 23:47:39,2,27,8,探したい数のハッシュ値を計算して、ハッシュ値が存在していれば探したい数も存在する、と考えるアルゴリズムなので、ハッシュ値を計算しているここが重要だと感じた。,17,探したい数のハッシュ値を計算して、ハッシュ値が存在していれば探したい数も存在する、と考えるアルゴリズムなので、ハッシュ値を計算しているここが重要だと感じた。2回目にでてきたところなので2番目。,20,ハッシュ値の一致を持って「見つかった」と判定するアルゴリズムなので、一致かどうかを判定している行がハッシュの計算に次いで重要だと感じた。,,まあ理解できた。,
12/17/2022 20:19:57,2,28,22,SPFAはベルマンフォード法で最短距離が更新された頂点しか回さないことで高速化を達成しているので、queueを使っているこの行が大事だと考えた。,20,一応最短経路を求めるアルゴリズムなので、最短距離が更新できれば更新する、という操作を入れる部分も大事だと感じる。高速化ベルマンフォードの高速化の部分の方が大事だと感じたので2番目。,25,回りすぎたら負のサイクルがあるという判定も重要だと考える。上二つの方が最短距離を求める部分でより本質的だと感じたので、これは3番目。,,まあ理解できた。,
12/16/2022 23:09:41,2,29,13,動的計画法の漸化式部分であり、この式が建てられれば解けたも同然なので、一番重要。,16,DP[i][j]はi番目までの品物を見たときに、価値jを達成するために必要な重みのminなので、dp[N][i]がW以下の最大のiが答えなので、その答えを求めている部分は重要。さすがに漸化式のほうが重要なので2番目。,9,漸化式にしたがって配列を埋めていくが、適切な初期化をしておかないと面倒なことになるので、若干薄い部分ではあるが、3番目に重要だと考えた。,,とても理解できた。,
12/16/2022 23:27:41,2,30,12,距離が確定した頂点見つける部分を、priority_queueを用いることにより高速化しているので、これが最重要。,15,最短距離が更新できるなら最短距離を更新するのは相変わらず重要アイデアなので、2番目に選んだ。,26,隣接リスト形式でグラフを表現することによりダイクストラ法は早く動くので、高速化のメイン箇所ではないが、残りの中ではここが重要であると考えた。,,とても理解できた。,
