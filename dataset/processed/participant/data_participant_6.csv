time,personID,problemID,1st,1st_reason,2nd,2nd_reason,3rd,3rd_reason,others,understanding,free
12/14/2022 13:39:27,6,1,8,尺取法において、区間を伸ばし続ける条件を記述する行になっているから。,10,尺取法の一部である、区間を伸ばすという処理を行っているから。1 番でないと考えたのは、問題によって変わる部分ではないから。,7,尺取法の一部である、区間をずらすという処理を行っているから。1 番や 2 番でないと考えたのは、問題によって変わる部分でなく、区間を伸ばす処理に対する従たる処理だから。,11。最終的に欲しい解答を計算している部分だから。,とても理解できた。,
12/14/2022 13:48:48,6,2,29,セグメントツリーにおいて最も複雑な、区間和を再帰的に計算する部分だから。,21,セグメントツリーにおける更新部分の根幹となる行だから。1 番でないのは、区間和計算ほど複雑ではないから。,17,うっかり忘れそうな処理だから。1 番や 2 番と比べると、瑣末な番号合わせだと言える。,,とても理解できた。,
12/14/2022 13:55:02,6,3,10,度数分布表を左から見る、というのが計数ソートにおけるソートの部分だから。,7,計数ソートに必要な度数分布表を計算する根幹の部分だから。1 番ではないのは、あくまで前処理の意味合いが強いから。,11,出現回数分だけソート結果に入ることを表す行だから。1 番や 2 番と比べると、ソートという文脈からは遠いと言える。,,とても理解できた。,
12/14/2022 14:07:06,6,4,33,出力がこの位置にあることで in order トラバーサルとなっているから。,38,出力がこの位置にあることで pre order トラバーサルとなっているから。重要度は 1 番と大して変わらないが、こちらの方が若干自明な気もする。,21,二分探索木構築において最も重要な、新たなノードを生成している部分だから。1 番や 2 番ではないのは、これは二分探索木における一般的な処理であり、本問はトラバーサルの部分の方を問われているから。,26。21 行目と同様に重要,とても理解できた。,
12/14/2022 14:10:29,6,5,19,深さ優先探索の実装の特徴である、再起的呼び出しを行っている部分だから。,15,解答となるタイムスタンプを更新している部分だから。1 番ではないのは、比較的自明だと言えるから。,20,解答となるタイムスタンプを更新している部分だから。実際 2 番と同程度に重要だと思う。,,とても理解できた。,
12/14/2022 14:16:56,6,6,10,動的計画法の根幹である、テーブルの更新を行っている部分だから。,7,動的計画法の更新の初期条件が含まれているから。漸化式においては更新式の次に重要と言えるだろう。,8,テーブルの更新順序を規定している行だから。1 番や 2 番の部分が決まれば自然に定まるので、それらより重要とは言えない。,9。8 行目と同様に重要。,とても理解できた。,
12/14/2022 14:21:09,6,7,13,二分探索の根幹である、解の存在範囲を半分に狭める部分だから。,15,二分探索の根幹である、解の存在範囲を半分に狭める部分だから。1 番と同様に重要。,8,あり得る解が 1 つになるまで探索するという終了条件を表す部分だから。解の狭め方に比べると従たる部分であると言える。,,とても理解できた。,
12/14/2022 14:25:24,6,8,37,問題固有の本質的な処理を行なっている唯一の部分であると言える。,14,リングバッファによるキューの実装で必要な処理だから。問題固有の部分ではないので 1 番ではない。,20,リングバッファによるキューの実装で必要な処理だから。2 番と同様に重要。,,とても理解できた。,
12/14/2022 14:29:52,6,9,25,combination というよく知られた関数を用いて問題の解答を端的に記述しているから。,21,combination を定義した部分だから。また、逆元計算の方法が含まれている。問題固有の考察は含まれないので、1 番ではない。,7,再帰を用いた繰り返し二乗法を端的に示す行だから。単に計算量削減のために必要なものなので、1 番や 2 番ではない。,,とても理解できた。,
12/14/2022 14:32:18,6,10,12,動的計画法の根幹である、テーブルの更新を行っている部分だから。,6,動的計画法の根幹である、テーブルの更新を行っている部分だから。ただし、1 番ほどテーブルの多くの部分について記述したものではない。,7,動的計画法の根幹である、テーブルの更新を行っている部分だから。2 番と同様に重要。,,とても理解できた。,
12/14/2022 14:42:25,6,11,15,小さいものを左、大きいものを右に寄せるための交換操作をする行で、ソートの根幹だから。,19,クイックソートが再帰的なアルゴリズムであることを示す行だから。ソート自体を処理しているとは言えないので 1 番ではない。,15,クイックソートが再帰的なアルゴリズムであることを示す行だから。2 番と同様に重要。,,とても理解できた。,
12/14/2022 14:45:56,6,12,39,セグメントツリーで区間 min を再帰的に求める根幹の部分だから。,21,セグメントツリーの更新を行う部分の本体。1 番と比べると自明。,17,忘れがちなインデックスの処理。1 番 2 番と比べると本質ではない。,,とても理解できた。,
12/14/2022 14:58:03,6,13,27,辺の重みに関する貪欲法であることがクラスカル法の本質である。,32,辺を採用することでループが発生しない場合のみ採用することを表す行である。1 番と比べると詳細にあたる。,34,辺を採用することでループが発生しない場合のみ採用、を実現するために集合の併合を行う部分。2 番に対して従たる部分だと言える。,,とても理解できた。,
12/14/2022 15:16:54,6,14,11,それぞれソート済みの左列と右列から、どちらの先頭を答えの列に append するかを判定するという、ソートの根幹部分である。,5,マージソートの再帰的構造が表れている部分である。ソート自体を行うわけではないので 1 番ではない。,6,マージソートの再帰的構造が表れている部分である。2 番と同様に重要。,,とても理解できた。,
12/14/2022 15:32:16,6,15,8,最短距離の更新を実際に行っている部分であり、ベルマンフォード法の根幹。,7,最短距離の更新条件が示されている行であり、1 番に対し従たる部分である。,5,高々頂点数回分のループで距離の更新が完了することを示す、プログラムの停止性に関わる部分。1 番、2 番ほどは直接答えに関係しない。,,とても理解できた。,
12/14/2022 15:42:20,6,16,8,実際に配列の更新を行うことでソートを実現している部分である。,5,tmp 以下の要素が現れない限り、という j を更新し続ける条件を表す、ソートの挙動を端的に示す部分である。1 番に対して従たる部分。,6,要素を一つずつ右にずらしていくという、これもソートの挙動を端的に示す部分。1 番や 2 番に対して従たる部分。,,とても理解できた。,
12/14/2022 15:52:30,6,17,19,最短距離の更新を実際に行う、ダイクストラ法の根幹をなす部分。,18,最短距離を更新する条件を示している、1 番に対して従たる部分。,11,次に最短距離を確定させる頂点を選ぶにあたり、暫定距離が最小となるものを選べば良いことを表す部分。ダイクストラ法の詳細部分にあたる。,,とても理解できた。,
12/14/2022 16:15:51,6,18,18,シェルソートにおける、列全体の分割数 h を徐々に減らしていくという特徴を端的に表している。,10,h 個に分割された列の何番目を対象とするか、というイテレーションであり、h の変化に影響を受ける部分。,11,列の分割方法が、index mod h ごとであることがわかる部分。2 番目と同等程度に重要。,,とても理解できた。,
12/16/2022 14:47:14,6,19,21,T の部分文字列の Rolling Hash の値が、前の値からの差分でどのように得られるかを示している。,14,t のハッシュ値の初期値を定義に従って計算する部分だから。1 番ほど非自明ではない。,15,p のハッシュ値を定義に従って計算する部分だから。2 番のように初期値計算の意味合いがない。,,とても理解できた。,
12/16/2022 14:58:27,6,20,4,左右それぞれにソート済みの範囲を持ち、これらが重ならない限り続けるという、シェーカーソートの特徴を表している。,12,大きい要素を右に寄せる走査が一巡して、最後に交換が起こった箇所より右はソート済みであるという事実を使うことを示している。1 番よりは細かい性質に言及している。,18,小さい要素を左に寄せる走査が一巡して、最後に交換が起こった箇所より左はソート済みであるという事実を使うことを示している。2 番と同様に重要。,,とても理解できた。,
12/16/2022 15:03:42,6,21,27,逆ポーランド記法の数式をスタックで処理するにあたっての、スタックから取り出し、演算し、挿入すという根幹の処理を示している。,29,逆ポーランド記法の数式をスタックで処理するにあたっての、スタックから取り出し、演算し、挿入すという根幹の処理を示している。1 番と同様に重要。,31,"逆ポーランド記法の数式をスタックで処理するにあたっての、スタックから取り出し、演算し、挿入すという根幹の処理を示している。1, 2 番と同様に重要。",,とても理解できた。,
12/16/2022 15:11:22,6,22,2,ユークリッドの互除法を再帰的に処理するにあたっての本体となる行である。,6,問題の答えである最小公倍数は、積を最大公約数で割ったものであることを示している。1 番ほど非自明ではない。,1,最大公約数が二引数の演算であることを示している。1 番や 2 番ではないのは、まあ流石に……,,とても理解できた。,
12/16/2022 15:22:36,6,23,22,累積和配列への加算を条件を示した行で、問題を解くのに必要な前計算の根幹部分である。,13,既に見つかっている素数の倍数を合成数として記録していくという、エラトステネスのふるいの根幹をなす部分である。問題固有の考察が含まれないので、1 番ほど重要でない。,9,エラトステネスの篩では、この条件付けによって合成数でない場合は処理をスキップできるため、漸近計算量が最大値 N に対し O(N log N) でなく O(N log log N) となる。計算量の (軽微な) 変化に関わるだけなので、1 番や 2 番ではない。,,とても理解できた。,
12/16/2022 15:42:15,6,24,14,入次数 0 の頂点はトポロジカルソートにおいて先頭としてよいという、Khan のトポロジカルソートの根幹をなす部分である。,22,入次数 0 の頂点はトポロジカルソートにおいて先頭としてよいという、Khan のトポロジカルソートの根幹をなす部分である。1 番と同様に重要。,21,"トポロジカルソートの先頭にした頂点から辺が伸びている頂点について、入次数を減算するという状態の差分計算を行なっている。 1, 2 番に対して従たる部分。",,とても理解できた。,
12/17/2022 23:26:23,6,25,11,幅優先探索の、訪問済みかつ未処理の頂点の中で最も昔に訪問した頂点を処理するという特徴が示されている。,15,Deque を Queue として使う以上入れ方にも選択肢があるが、後ろから入れるということが示されている。Deque を使わなければさして気にするところでもないので 2 番。,13,"この条件分岐は忘れがちだが忘れると痛い目を見る。1, 2 番に比べると細かい注意点に当たる。",,とても理解できた。,
12/17/2022 23:37:50,6,26,5,Warshall-Floyd 法は DP の一種であり、遷移式が最も重要。,2,k のループを外側にしないと酷い目に遭う。1 番に比べれば細かい注意点。,7,負閉路の存在条件を示している。1 番や 2 番と比べると最短路計算の文脈からは外れる。,,とても理解できた。,
12/17/2022 23:54:53,6,27,9,挿入時に空いているアドレスを探して記録するというオープンアドレス法の特徴を示している。,18,検索時に空のアドレスにぶつかればその key は入っていないと判断するというオープンアドレス法の特徴を示している。1 番の挿入方法から導かれる検索方法だといえる。,22,全アドレスを見尽くしても key が見つからない場合もその key 入っていないと判断する。2 番と比べてより自明。,,とても理解できた。,
12/18/2022 0:21:41,6,28,19,最短距離を更新する条件が示されている。最短路問題を解くにあたり根幹となる操作である。,22,最短路が更新された頂点を今後の処理対象とすることが示されている。SPFA が高速に動作する原理である。処理時間改善に過ぎないので 1 番ではない。,25,"負閉路の存在条件が示されている。1, 2 番と比べると最短路問題の文脈からは外れている。",,とても理解できた。,
12/18/2022 0:25:08,6,29,13,ナップサック DP の遷移式であり、解法そのものと言ってもよい。,9,ナップサック DP の境界条件であり、遷移式ほど広範囲には影響しないものの必要な部分である。,16,作成した DP テーブルから答えをどのように判断するかを示している。今回の場合は比較的自明度が高い。,,とても理解できた。,
12/18/2022 0:29:21,6,30,14,最短距離の更新条件を示している。最短路問題を解くアルゴリズムでは一般にこのような処理が必要。,12,次に調べる頂点は、現在調査済みの頂点を用いて行ける最も近い頂点であるという、ダイクストラ法の特徴を示している。,16,2 番で述べたことを実現するためにここで push を行っている。,,とても理解できた。,
