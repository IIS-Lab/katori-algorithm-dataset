time,personID,problemID,1st,1st_reason,2nd,2nd_reason,3rd,3rd_reason,others,understanding,free
12/10/2022 13:20:43,1,21,22,この問題をスタックを用いて解くことができるということを初めて知り，発想としても簡単ではないと感じたため1番目に選択した．,18,スタックの実装において，要素を取り出す際に，self.headという変数が次に要素を配置するインデックスであることに注意して1減らしてから要素を取り出す必要があり，スタックの実装の中心部分であるとともに注意も必要であるため選択した．スタックを利用するという発想の方がこの問題においては重要と考え，2番目とした．,13,スタックの実装の中心部分であると考えて選択した．2番目ほど注意を必要としないと考え，3番目とした．,,とても理解できた。,
12/30/2022 23:52:20,10,21,13,pushしたときに、headをずらすことがstackにおいて重要だと思ったため。,18,1番と同じように、popするときは、headを-1することで戻すことが重要だと思ったため。,27,1番2番などに注意して、実装したstackを用いて、逆ポーランド記法の計算をしていて重要だと思ったため。,,まあ理解できた。,
1/3/2023 7:33:13,11,21,22,逆ポーランド記法をstackで処理しようと発想したところが大事だと思います．そこが反映されている箇所を選びました．,12,頭から入れる構造になっているのがqueueと違うところなので選びました．stackの実装というより細かい話になるので2番目にしました．,25,逆ポーランド記法をstackを使いながらうまく処理している箇所の冒頭をえらびました．stackを作ることにより重点があると考えたので3番目にしました．,,とても理解できた。,
12/16/2022 23:54:55,2,21,27,逆ポーランド記法の処理はそれほど自明ではないので、その処理の部分を書いたここがこの問題の最重要ポイントだと感じた。,29,逆ポーランド記法の処理はそれほど自明ではないので、その処理の部分を書いたここがこの問題の最重要ポイントだと感じた。2回目の登場なので、2番目。,31,逆ポーランド記法の処理はそれほど自明ではないので、その処理の部分を書いたここがこの問題の最重要ポイントだと感じた。3回目の登場なので、3番目。,,まあ理解できた。,
12/15/2022 20:43:48,3,21,22,ループ部分と迷ったが、この問題で重要なのは逆ポーランド記法は左端からstackに突っ込んでいって計算すればそのまま計算することが出来る、ということなので。,25,ここのループで左端からstackに突っ込んで行く過程を実装しているので。,6,stackというデータ構造の何が重要かと言われると難しいが、単純なリストと先頭のインデックスを管理するだけで実装が出来るというのは重要かもしれない。,,とても理解できた。,
12/21/2022 15:44:53,4,21,27,逆ポーランド記法での演算をする際にスタックをこのように利用するという処理が書かれているから。,33,数字が得られればスタックに入れるというスタックの性質を利用しているから。ただ処理としては単純。,13,pushしたときにはheadを+1するというのはスタックの実装において本質的であるから。ただ逆ポーランド記法の計算には直接的に関係しない。,,とても理解できた。,
12/28/2022 20:57:42,5,21,29,この問題はStackを使用できるという部分が非自明であるため、Stackそのものの実装よりもStackを利用している部分のほうが重要であると考えた。その中で3種類の演算子はほぼ同様の処理で実現できるが、唯一符号が逆になっており注意が必要な29が最も重要であると考えた。,33,+ や × の演算子よりも、数値がpushされたときのStackの扱い(ただpushすればよい)という点が重要だと考え、2番目に重要であるとした。,27,+ や ×の演算子の扱いについても上2つについで重要であると考え、先に登場した27行目が3番めに重要であるとした。,"31行目：*についての処理が書かれており、重要
12行目,18行目: push,popについてlistで実装する際のhead変数の扱いが書かれており、重要",とても理解できた。,
12/16/2022 15:03:42,6,21,27,逆ポーランド記法の数式をスタックで処理するにあたっての、スタックから取り出し、演算し、挿入すという根幹の処理を示している。,29,逆ポーランド記法の数式をスタックで処理するにあたっての、スタックから取り出し、演算し、挿入すという根幹の処理を示している。1 番と同様に重要。,31,"逆ポーランド記法の数式をスタックで処理するにあたっての、スタックから取り出し、演算し、挿入すという根幹の処理を示している。1, 2 番と同様に重要。",,とても理解できた。,
12/15/2022 16:52:37,7,21,22,問題を解くためにstackのデータ構造を用いるということがこの行から分かり，問題を解くための大きなヒントとなる部分であるから．,27,"演算子が入力であった時は，直前の二つの入力を取り出して計算し，それを再びstackに挿入することで計算が可能であることがこの行で分かるから．(29,31行目も同様)
一番目ではない理由は，stackを利用するということ自体を思いつけないとこの処理を行うことはできないから．",19,"stackでは直前に入れた要素を取り出すようなデータ構造であることがこの行から分かり，この構造を用いることで正答を導き出すことができるから．
3番目である理由は，stackがどのようなデータ構造かをわかっている場合は，既知のことだから．",,まあ理解できた。,
12/19/2022 12:12:50,8,21,27,スタックを用いながら、逆ポーランド記法に沿った計算を行っている、アルゴリズムの肝の部分だから。,29,1番と同様の理由で、逆ポーランド記法特有の計算方法を実現しているところだから。重要度は1番と同じ,31,1番・2番と同様で、逆ポーランド記法特有の計算方法を実現しているところだから。重要度は上の二つと同じ。,,とても理解できた。,
12/21/2022 2:13:03,9,21,27,逆ポーランド記法における足し算の計算を、スタックから値を取り出すことで行っている箇所であるから。,32,逆ポーランド記法において、数字が出てきたらスタックにその値をそのまま格納すればよいことが表されているから。実際に計算する処理を行う箇所のほうが大事だと考えているので、1番にはしなかった。,35,"最後に答えの値を取り出す処理が書かれているから。これは処理の核心の部分ではないため、1,2番目とはしなかった。",29・31行目。逆ポーランド記法における引き算、掛け算の計算結果の求め方が書かれているので、足し算同様に重要と考えている。,とても理解できた。,
