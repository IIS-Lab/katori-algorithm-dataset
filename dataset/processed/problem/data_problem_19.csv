time,personID,problemID,1st,1st_reason,2nd,2nd_reason,3rd,3rd_reason,others,understanding,free
12/12/2022 2:31:28,1,19,21,ハッシュの更新式を表しており，このように前のハッシュを利用して簡単に次のハッシュを計算できることがこのアルゴリズムを成り立たせていると考えたため．,22,ハッシュ値の一致を用いて文字列を照合するという発想を表しており重要だと考え選択した．ハッシュの計算が高速に行えるという点の方が重要だと考え，2番目とした．,16,今後ハッシュの計算に利用する変数をあらかじめ計算しており実装の工夫として大切だと考えたため．アルゴリズムの核というよりは実装の工夫にあたると考え3番目に選択した．,,とても理解できた。,
12/30/2022 22:35:13,10,19,21,しゃくとり法的な考えを用いており、最も重要であると考えたため。,14,1番ほどの工夫ではないが、t_hashとp_hashを計算することが2番目に重要であると思った。,16,1番2番に気をつけた上で、base_l_powerも剰余を取りながら、更新することが3番目に重要であると思った。,,まあ理解できた。,
1/3/2023 7:19:06,11,19,14,文字列のハッシュをとることで同じ文字列かを比べるアルゴリズムの核だと感じたから．,21,見る文字列をスライドしていくたびに，ハッシュの更新をしている箇所だから．,1,基底を変数で持つと見やすくなるから．絶対に必要な工夫ではないので3番目にしました．,,まあ理解できた。,
12/16/2022 22:37:59,2,19,22,ローリングハッシュは、それぞれの文字列に対してハッシュ値を計算してそれが一致していれば文字列が一致していると判定するアルゴリズムなので、一致判定をしている行が最重要だと考えた。,21,文字列tのスタート地点をずらしたときのハッシュ値が高速に計算できることはアルゴリズムが高速に動くことにとてもよく貢献していると考える。ハッシュが文字列の一致判定に使えるというアイデアの方が中心であると感じたので、こっちが2番目。,7,細かい部分なので3番目にしたが、文字列の長さで場合分けをしておかないと、13行目のハッシュの計算で配列概算症を起こして困ってしまうと思うので、これも重要。,,とても理解できた。,
12/15/2022 20:35:18,3,19,31,この問題のコアはラビン-カープ法、を使えば文字列の照合そのものがO(1)かつ前計算も（この問題では前計算そのものをループ憎んでいるが）線形に出来ることなので。,14,15行目と合わせて、ラビン-カープ、というかローリングハッシュにも共通でハッシュ値をMODで求めて照合に使えることが重要だから。,21,本来文字列の長さ分だけ計算が必要なハッシュ値計算をこのDPを使うことで計算量を圧縮できているから。,15,とても理解できた。,
12/21/2022 15:18:35,4,19,21,文字列のハッシュ値を効率的に更新するという複雑な処理を行なっているから。,22,文字列の一致をハッシュ値によって確認するというのはラビンカープ法の本質だから。ただ、処理としては一致を確認しているだけ。,14,ハッシュ値を求めることはラビンカープ法において重要だから。最初のハッシュ値を単純な方法で求めているだけだから。,,まあ理解できた。,
12/28/2022 20:39:25,5,19,21,ローリングハッシュの基本的な式であり、最も本質的だと考えた。,14,15行目とともに、ハッシュの具体的な計算方法がわかりやすく重要だと考えた。ただし、21行目とほぼ同じ処理であるため、1番ではないと考えた 。,7,コーナーケースの処理であり、重要だと考えた。ただしローリングハッシュとは関係ない部分なので3番めに重要だとした。ｌ,,とても理解できた。,
12/16/2022 14:47:14,6,19,21,T の部分文字列の Rolling Hash の値が、前の値からの差分でどのように得られるかを示している。,14,t のハッシュ値の初期値を定義に従って計算する部分だから。1 番ほど非自明ではない。,15,p のハッシュ値を定義に従って計算する部分だから。2 番のように初期値計算の意味合いがない。,,とても理解できた。,
12/15/2022 15:04:29,7,19,31,この問題ではラビンカープ文字列探索アルゴリズムを用いるということがこの行から分かり，アルゴリズム名を知っている人はどのように解くのかを把握することができるから．,22,"文字列をハッシュにして，それが等しいかどうかを比較することで文字列の探索を行うということがこの行から分かるから．
1番でない理由は，この行だけではどのようにハッシュを形成するかなど全体的なアルゴリズムを把握することができないため．",15,"ハッシュをどのように計算するのか，ハッシュの定義がここで分かるから．
3番目である理由は，2番目で挙げた，ハッシュを比較するという考え方の前提があった上でどのようにハッシュを計算するのかという考えの流れになると思ったから．",21: どのように効率的に部分文字列のハッシュを計算するのかがこの行から分かるから．,まあ理解できた。,
12/19/2022 4:41:55,8,19,14,ラビンカープ法で、ローリングハッシュを使うというのは肝の部分だから。,22,ハッシュが一致していたら文字列が一致しているとみなす、というのは問題を解く上で大切だから。ハッシュの定義の方が大事なので2番とした。,21,1番と同じく、ローリングハッシュの計算をしているところだから。内容的に重複しているので3番とした。,,まあ理解できた。,
12/20/2022 12:26:30,9,19,21,ハッシュの更新を行う箇所であり、ここの更新がローリングハッシュで計算量を落とせる本質の箇所であるから。,14,ハッシュの値の初期値を設定する箇所であるから。計算量を落とす核心の部分ではないため、1番ではないと考えている。,22,文字列の照合条件を、ハッシュの照合条件とみなして判定する箇所であるから。ハッシュの計算箇所ではないため、重要度は下がると考えている。,,とても理解できた。,
