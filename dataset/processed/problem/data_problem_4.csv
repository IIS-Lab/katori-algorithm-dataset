time,personID,problemID,1st,1st_reason,2nd,2nd_reason,3rd,3rd_reason,others,understanding,free
12/8/2022 21:29:43,1,4,19,二分探索木の構築において，ある要素Aの左部分木の要素は全てAより小さいという制約を表現しており，24行目も同様に導かれるため，最も重要だと考えた．,32,中間順巡回のアルゴリズムを表す上で重要だと考え選択した．木の構築の方が本質的であることから2番目とした．,38,行きがけ順のアルゴリズムを表す上で重要だと考え選択した．木の構築の方が本質的であること，行きがけ順ではソートされた列が選ばれないことから2番目とした．,,とても理解できた。,
12/30/2022 17:12:28,10,4,19,insertするときに、左右で場合分けすることが重要であると思ったため。,15,self.rootがNoneの時の場合分けも非常に重要だと思ったため。1番ではないのは比較的気付きやすいと感じたため。,32,"再帰を使ったり、self.in_order(node.left)とprint("" "" + str(node.number), end="""")の順番に気をつけたりして、in_orderとpre_orderを実装することが重要だと感じたため。",,あまり理解できなかった。,
1/3/2023 2:14:13,11,4,19,左の子には小さく，右の子には大きいという木の性質をつかって探索している行だから．,1,木を作る上で大切な右と左の子をもつ要素を定義している箇所であるため．実際に探索している箇所の方が重要かなとおもったので2番目にしました．,32,"nodeの情報を表現する方法としてinorder,preorderという概念があることは大事だと思います．一方で探索木をどう表そうとも載ってる情報の内容が変わるわけではないので3番目にしました．",,とても理解できた。,
12/15/2022 11:14:47,2,4,19,データ構造の重要な部分であるinsertにおいて、値が現在のノードより小さいときは左に入れる、という処理を行なっている部分であるから。,24,データ構造の重要な部分であるinsertにおいて、値が現在のノードより大きいときは右に入れる、という処理を行なっている部分であるから。19行目より後に出てきているので、こちらを2番にした。,14,insertする本質とは関係ないが、実際にはこれがないと一番最初にエラーが起きてしまうので、そのコーナーケースを処理する部分として重要であると考える。,,まあ理解できた。,
12/11/2022 0:34:39,3,4,18,この問題のコアは二分探索木というデータ構造そのものだと思うのですが、二分探索木で一番大事なのはまあここのwhileだけでinsert or  検索位置がわかることかなと思ったからです。,30,問題に効率よくこたえるためには不可欠なメソッドだから。逆に言えばコアな部分ではない。,36,問題に効率よくこたえるためには不可欠なメソッドだから。逆に言えばコアな部分ではない。,,とても理解できた。,
12/21/2022 11:40:17,4,4,19,二分探索木を作成・値を挿入するときに最も重要になる条件分岐だから。,32,中間順巡回を行うために、どの引数を用いて再起的に関数を呼び出すかを決めているため。ただ、できている木を見ていくだけの処理。,39,先行順巡回を行うために、再起的に関数を呼び出している部分だから。ただ、この木においては中間順の方が重要な意味を持つ。,,とても理解できた。,
12/28/2022 13:19:47,5,4,19,二分探索木の挿入において、左右がどのように振り分けられるかを表している重要な部分だと思うから,23,左右の振り分けのルールを理解することが大前提だが、その後に疑問となりうる、すでに子ノードに値が振り分けられていた場合、再帰的な処理を行うことが読み取れるコードになっているから。,38,二分探索木の構築のほうが重要だと考えたが、出力における2種類の探索のうち、pre_orderのほうが直感的に捉えられると考え、出力部分を選んだ。,"39,40: pre_orderの巡回において、どの部分で再帰関数を呼び出しているかも重要だと思うから",とても理解できた。,重要性の評価とは関係なく競プロのコードとしてみた時、キーに重複があったときに無限ループが発生するような気がして少し違和感がありました。AOJのこの問題はライブラリの検証のためあると思っているので、コードの汎用性を優先したほうが良いのではないかなと思ってしまいました
12/14/2022 14:07:06,6,4,33,出力がこの位置にあることで in order トラバーサルとなっているから。,38,出力がこの位置にあることで pre order トラバーサルとなっているから。重要度は 1 番と大して変わらないが、こちらの方が若干自明な気もする。,21,二分探索木構築において最も重要な、新たなノードを生成している部分だから。1 番や 2 番ではないのは、これは二分探索木における一般的な処理であり、本問はトラバーサルの部分の方を問われているから。,26。21 行目と同様に重要,とても理解できた。,
12/13/2022 21:34:08,7,4,32,中間順巡回においては先に各ノードより左に位置するノードを見るということが重要であり，それがここで現れているから．,38,"先行順巡回では先に自分自身のノードを見てからその子のノードへと移っていくことがこの行で現れているから．
1番でない理由は，中間順巡回に比べてこちらの方が直感的だと思ったから．",12,"疑似コードで触れられている二分木のinsertを実際に実装している部分だから．
3番である理由は，この問題では中間順巡回，先行順巡回でのノードの巡り方のアルゴリズムの違いが問われており，ここは本質ではないと思ったから．",,まあ理解できた。,
12/17/2022 21:49:32,8,4,19,新たな値の挿入において、二分木の性質を活用しているところだから。,33,中間順巡回と先行順巡回の違いがこのprint関数の位置によく表れているから。二分木の挿入の方が、二分木の本質だと思ったので2番にした。,38,2番目に重要だと思ったのと同じ理由。重要度は2番目と同じだと思った。,,まあ理解できた。,
12/15/2022 20:46:05,9,4,19,いま見ているノードよりも値が小さいときには左のノードに進むことを表す処理を表す箇所であり、二分探索木の作り方を分岐によって表現する点で重要であると考えている。,21,二分探索木に値をセットするところであり、左のノードに進んだときに値が存在しなければそこに置く、という処理を表す箇所であり、二分探索木の進む方向を決めた後の処理を表現している点で、進む方向を決める処理の次に重要であると考えている。,32,二分探索木の巡回を、再帰によって行うことを表しているから。この問題では二分探索木の構成が本質であると考えているため、先述の2つよりは重要度は低いと考えている。,"15行目。二分探索木に値がまだ入っていないときの処理を、別途場合分けによってあらわしている点で重要だと考えている。
24・26行目。それぞれ「一番大事な処理」「二番目に大事な処理」を左に進む場合で述べたが、右に進むの場合も当然重要である。
33・34・38～40行目。「三番目に大事な処理」を32行目で述べたが、これらの行も同じく二分探索木の巡回を再帰によって行うことを表しており、重要である。",とても理解できた。,「左と右」や「通りがけ順と行きがけ順」のように、重要な行の中に2つのものが並列で並んでいるような箇所があり、それらの順位付けの扱いをどうするのかが非常に難しいと感じました。
