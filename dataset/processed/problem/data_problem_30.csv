time,personID,problemID,1st,1st_reason,2nd,2nd_reason,3rd,3rd_reason,others,understanding,free
12/10/2022 11:43:29,1,30,12,これまで見た頂点の中で最も距離が小さい点は距離を確定して良いというダイクストラ法の考え方が表されていると考えたため．,16,候補となる頂点を優先度付きキューに入れることで，短い順に取り出すことができるという実装上の最も重要な工夫であると考えたため．一方で，アルゴリズムの発想を表現している1番目ほどは重要でないと考えた．,8,"優先度付きキューを使うという実装の工夫を表しているため選択した．アルゴリズムのロジックの部分ではないため1,2番目よりも重要度は下がると考えた．",,とても理解できた。,
12/31/2022 2:20:25,10,30,16,ヒープを用いて、更新した後、一番小さいものが上に来るようにすることが重要だと思ったため。,15,1番の工夫に加え、ダイクストラ法のアルゴリズムに基づいた値の更新も重要だと思ったため。,8,1番2番の次に、ヒープの構造を利用して計算量を下げることが重要だと思ったため。,,まあ理解できた。,
1/3/2023 8:39:22,11,30,12,最短距離が最も短い頂点を取り出すことがダイクストラにとって大事だと感じました．,23,距離が小さくなっていたら更新する箇所を選びました．どの探索候補を選ぶかの方が自明度が低いと思ったので，比較して2番目にしました．,16,確定済みかを把握しておくのは大事なので選びました．どちらかというと工夫に近いのかなと感じたので，3番目にしました．,,とても理解できた。,
12/16/2022 23:27:41,2,30,12,距離が確定した頂点見つける部分を、priority_queueを用いることにより高速化しているので、これが最重要。,15,最短距離が更新できるなら最短距離を更新するのは相変わらず重要アイデアなので、2番目に選んだ。,26,隣接リスト形式でグラフを表現することによりダイクストラ法は早く動くので、高速化のメイン箇所ではないが、残りの中ではここが重要であると考えた。,,とても理解できた。,
12/17/2022 23:32:32,3,30,28,この問題のコアはダイクストラ法で解けることに気付くことだから。,8,ダイクストラ法で重要なのはコストが小さいものから探索すれば効率よく探索できることだが、優先度つきQueを使うことでこれを少ない計算量で実装できているから。,15,ダイクストラ法にとってのコアではないが、最短経路探索法としてDPを使っていることは重要で、個々がその遷移式だから。,,とても理解できた。,
12/21/2022 23:36:01,4,30,12,現在までで最短距離を持つノードをヒープによって取り出すというのがダイクストラ法の本質だから。,16,1番の行で重要な役割を果たすヒープを更新する処理だから。あくまで処理としては更新のみのため。,15,答えとなるdistを更新する行だから。ただダイクストラ法の本質ではないため。,,とても理解できた。,
12/28/2022 22:32:46,5,30,1,このコードだけでは、Dijkstra法で利用しているheapqが内部でソートが保たれていることが分からない。そこで、heapqについて調べておくことが理解に不可欠であると考え、import文のある1行目を最も大切だと考えた。,16,heapqの挙動(heappushの引数)について理解したのち、queueに何がpushされているのかを理解することができるため、16行目が2番目に大切だと考えた。,15,距離の更新を実際に行っているため、重要だと考えた。ただし、基礎的なものであるため3番目においた。,,とても理解できた。,
12/18/2022 0:29:21,6,30,14,最短距離の更新条件を示している。最短路問題を解くアルゴリズムでは一般にこのような処理が必要。,12,次に調べる頂点は、現在調査済みの頂点を用いて行ける最も近い頂点であるという、ダイクストラ法の特徴を示している。,16,2 番で述べたことを実現するためにここで push を行っている。,,とても理解できた。,
12/15/2022 18:53:11,7,30,28,この問題はダイクストラ法を用いることで解決できるということがこの行から分かり，アルゴリズム名を知っている人はどのように解くのかを把握することができるから．,8,"ダイクストラ法では優先度付きqueueで最小経路を持つ頂点から順に取り出すことで実現できるアルゴリズムであり，それを用いることが表れているこの行が重要ではないかと考えたから．
1番ではない理由としては，これはダイクストラ法の一部であり，これだけではアルゴリズム全体を把握することはできないため．",14,"この行の条件式で，現在一番最短距離の頂点からの距離を更新していくことで，最終的に最短距離を求めることが可能であるから．
3番である理由としては，ダイクストラ法の中で8行目の優先度付きqueueを用いて常に一番最短の距離の頂点を取り出してこの行の操作を行っていくことで最短距離を求めることが可能であり，8行目の方が重要だと思ったから．",,まあ理解できた。,
12/19/2022 19:04:15,8,30,9,ヒープを使って最短経路を探索するというのはダイクストラ法の肝であるから。,16,最短経路が更新されたものはヒープにいれていくというのも、ダイクストラ法を実行する上で重要だから。ヒープを使うという事実の方が本質的だと思ったのでこちらは2番にした。,5,十分に大きな値で初期化しておくというのは、ダイクストラ法の実行において大切だから。アルゴリズムそのものではないので3番とした。,,まあ理解できた。,
12/21/2022 4:09:44,9,30,14,最短経路の更新を行う条件を表す行であるから。最短距離の更新を行う条件を指定するため、一番重要と考えている。,16,距離の情報と、頂点の情報を、（距離、頂点）の順に優先度付キューに入れることで、常に最短距離が最も小さい頂点のデータが取り出されるようになるから。更新を行う部分ではないため、1番ではないと考えている。,9,最初に始まりの頂点と、距離0のデータを優先度付キューに入れている行であるから。細かい実装上の注意ではあるため、1番や2番ではないと考えているものの、ここを行わないと全く最短経路が更新されないため、重要と考えている。,,とても理解できた。,このソースコードにあるダイクストラ法だと、途中（12行目と13行目の間）で枝刈りがなされておらず、最短経路でない古いデータに対しても続く箇所での処理を行ってしまっているため、最悪ケースで計算量が二乗オーダーになってしまいます。（もし仮に枝刈りの処理がソースコード内にあった場合、「ここがなくても正しく動作はするものの、最悪ケースでの計算量が悪くなってしまうから」という理由で、2番目に重要な行に選択していました。）
