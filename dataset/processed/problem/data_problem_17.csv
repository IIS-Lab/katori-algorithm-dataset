time,personID,problemID,1st,1st_reason,2nd,2nd_reason,3rd,3rd_reason,others,understanding,free
12/10/2022 13:15:10,1,17,21,現在到達している頂点の中で距離が最も小さい頂点の距離を確定して良いというダイクストラ法の考え方の根本となる部分が記載されているため．,10,全ての頂点を見ることで現在到達している頂点の中で距離が最小となるものを見つけるという考え方を最もよく表していると考え選択した．1番目のようにダイクストラ法のアルゴリズムの最重要な部分ではないと考え，2番とした．,9,全ての頂点を見ることで現在到達している頂点の中で距離が最小となるものを見つけるという考え方を最もよく表していると考え選択した．2番目の方がこの考え方をより端的に表していると考えて3番目とした．,,とても理解できた。,
12/30/2022 21:28:35,10,17,19,距離を短く出来る場合は更新することが最も重要だと思いました。,10,1番に気をつけた上で、現在までで最短距離を持つ未確定のノードを取り出すことが重要だと思ったため。,21,1番2番に気をつけた上で、done[cur]をTrueにし忘れないようにすることが重要だと思った。,,まあ理解できた。,
1/3/2023 6:57:03,11,17,10,次に確定させるノードを決める時に，未確定かつ最短でいけるところを選ぶという方針がアルゴリズムにおいて大事な点だと感じました．,19,辺の重みを更新している箇所なので重要に感じました．ダイクストラならでは操作というわけではないので2番目にしました．,21,距離が確定したところを保持しておかないと次のノードが決められないから．アルゴリズムの探索手法に付随する処理感が強いため3番目です．,,とても理解できた。,
12/16/2022 22:16:41,2,17,11,ダイクストラ法のキモは、最短距離が順々に確定させるところなので、その確定した部分を見つけ出す部分が最重要であると考えた。,18,最短距離が更新できるところがあれば更新していくのはダイクストラ法でもあいかわらず重要な位置を占めていると思う。キモは上のやつだと思うので、これは2番目。,21,使用済みの距離が確定した頂点はマーキングしておかないとtmp_min_distを決める際に困るので、アルゴリズムの中心部分ではないが、これが3番目であると考えた。,,とても理解できた。,
12/15/2022 20:23:38,3,17,33,この問題のコアはダイクストラ法を使えば解くことが出来る、ということなので。,19,優先度つきQueも使っていないので大分苦しい実装だがしいて言えばここの比較後の遷移は大事かもしれない。,14,このダイクストラだと終了条件がないと止まらないため、ここの式は実は大事かもしれない。,,とても理解できた。,
12/21/2022 14:57:48,4,17,18,あるノードまでの距離をこの条件文を使って更新する。この方法がダイクストラ法の本質だから。,10,1番の処理で使うcurを更新するのに必要な条件文だから。あくまで1番の処理のための道具。,4,更新を終えたノードを保存するリストは必要だから。ただここではリストを用意しているだけ。,,まあ理解できた。,
12/28/2022 19:33:24,5,17,10,結果的にdone[i]がFalseでありdist[i]が最小であるものをtmp_min_distとcurに代入していることが、この行をよく読まないと分からないと感じたから。,17,Djikstra法の本質である、もっとも距離の近い頂点から行ける頂点を全走査する考え方が表現されているから。1番ではないと判断した理由は、Djikstra法の概要を知っていれば読解の必要がなく内容を想像できる点。,31,特殊な入力方法を受け取るための実装であり、上位2つの行と違って直接解法には関わらないが、読解の必要があると考えたから。,,あまり理解できなかった。,
12/14/2022 15:52:30,6,17,19,最短距離の更新を実際に行う、ダイクストラ法の根幹をなす部分。,18,最短距離を更新する条件を示している、1 番に対して従たる部分。,11,次に最短距離を確定させる頂点を選ぶにあたり、暫定距離が最小となるものを選べば良いことを表す部分。ダイクストラ法の詳細部分にあたる。,,とても理解できた。,
12/15/2022 14:37:13,7,17,33,この問題の解法ではダイクストラ法を使うということが分かり，アルゴリズム名を知っている人であれば，ここからどのように解くことができるのか考えることができるから．,10,"ダイクストラ法において，次に更新していく元となる頂点は，まだ見ていない頂点でかつコストが最小である頂点であるということがこの行で分かるから．
1番でない理由は，これはダイクストラ法の具体的な中身であり，ここからアルゴリズム全体が分かるというわけではないから．",18,"ダイクストラ法において，見つけた最小コストを持つ頂点を起点にその周りの頂点のコストを更新していくという操作のための条件がこの行で示されているから．
3番である理由は，2番での頂点を見つける操作を経た上でこの操作を行うから．",,まあ理解できた。,
12/18/2022 2:22:32,8,17,17,ダイクストラ法の処理の手順がよく表れているwhileループだから。,21,一度巡回したところには戻ってこないというアルゴリズムの特徴がよく出ているから。最重要の処理ではないので2番にした。,2,距離を十分に大きな値で初期化しておくのはダイクストラ法の実行において重要だと思ったから。あくまで初期化なので3番にした。,,とても理解できた。,
12/20/2022 2:07:20,9,17,19,最短経路の更新を行っている行であるから。ここが動かないと正しく動作しないため、最短経路を求めるアルゴリズムではここが最も重要と考えている。,12,次に選ぶ頂点を決めている行であり、ここが動作していないと次に選ぶ頂点がわからないから。直接最短経路の更新をする行ではないため、あくまで1番ではないと考えている。,10,次に選ぶ頂点を決める際の条件を決めている行であり、ここが動作していないと次に選ぶ頂点がわからないまま処理が終わらないことになりかねないから。実際に頂点を決めているわけではないので、あくまで2番目よりは重要度は落ちると考えている。,"2行目。初期値を設定している行であり、ここを間違えると正しく動作しないから。
4行目。既に見たかどうかの配列を確保している行であり、これを行わないとプログラムが終わらないから。",とても理解できた。,
