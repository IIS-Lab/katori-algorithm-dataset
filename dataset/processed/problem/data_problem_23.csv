time,personID,problemID,1st,1st_reason,2nd,2nd_reason,3rd,3rd_reason,others,understanding,free
12/12/2022 2:41:27,1,23,13,ある素数の倍数(自身を除く)は合成数であるという事実を利用するアルゴリズムの考え方を最も端的に表していると考えたため．,12,ある素数の倍数(自身を除く)は合成数であるという事実を利用するアルゴリズムの考え方をよく表していると考えたため．1番目に選択した行の方がより端的に表していると考え，2番目に選択した．,21,累積和を用いて複数のクエリに対応するという考え方を表していると考えたため．一方でエラトステネスのふるいを用いることの方が発想として難易度が高いと考えこちらは3番目とした．,,とても理解できた。,
12/31/2022 0:23:40,10,23,12,素数の倍数をFalseにしていて、エラトステネスの篩において重要だと思ったため。,8,1番の上で、i * i <= Nとすることで計算量をこの部分の計算量をO(√N)に抑えることができて、重要であると思った。,21,1番2番に注意して実装した関数を用いて、累積和により、区間の中の条件を満たす数の個数を出していて重要だと感じたため。,,とても理解できた。,
1/3/2023 7:41:36,11,23,12,倍数に対して素数でないことをメモしている箇所が要だと思ったため．,6,"0,1は素数ではないので，初期条件として自分で入れてあげる必要がある．前処理のような意味合いが強く感じるため2番目にしました．",28,累積和を使ってある区間の和を求めている箇所．素数判定の方が重要だと考えたので，3番目にしました．,,とても理解できた。,
12/16/2022 22:51:02,2,23,21,L ~ Rで条件を満たすものの個数、というタイプのクエリに答える問題は累積和で考えると効率的に解けるので、そのアイデアを用いた部分を最重要だと評価した。,8,1 ~ 10^5の全部の数を素数判定する必要があるが、全部判定していると間に合わない。(10^5) ^ (1/2)までの数で試し割りすればいいという知見が出ている行なので、クエリの高速化に次いで重要だと考えた。,11,エラトステネスの篩のアイデアで、xが素数ならxの倍数は素数ではない、という操作をしている部分なので、重要。割と自明なアイデアだと感じたので3番目にしました。,,とても理解できた。,
12/16/2022 8:28:50,3,23,18,この問題のコアは複数の数の素数判定はエラトステネスの篩で前計算すれば高速に処理できることだから。,21,この問題でもう一つの大事なアルゴリズムとして、累積和による区間和高速計算が挙げられるが、それを実現してるのはここのDP遷移式だから。,13,エラトステネスの篩で一番重要なのはこの特殊な全探索の更新処理だと考えるから。,,とても理解できた。,
12/21/2022 16:25:08,4,23,28,答えを求めるときにcumulative_sum[]の性質を利用して効率的に計算しているから。,22,答えを求めるために必要なcumulative_sum[]を作るために重要な条件文だから。重要だが、問題文の条件をそのまま書いているだけであるため。,12,素数判定を効率的に行なっている部分だから。ただ素数判定はこの問題において道具でしかない。,,とても理解できた。,
12/28/2022 21:06:31,5,23,28,この問題は、概ね「累積和リストを利用した区間和」と「エラトステネスの篩を利用した素数の列挙」の2つの要素がある。そのうち、累積和リストを利用した実装のほうが思いつきづらく、より問題を解くのに本質的だと考えたため、累積和をどのように使えばよいかが書かれている28行目がもっとも重要だと考えた。,22,エラトステネスの篩の関数内部については、どの行もひとしく重要であると考え、特定の行を選ぶことはできないと感じた。したがって、この問題の「2017に似た数」という部分を条件式に起こした22行目が、累積和ほど非自明な実装でないにせよ、２番目に重要だと思った。,23,累積和リストの実装の中の一部であり、上２行と違い１行で大きな意味を持っているわけではないため３番めに重要だと考えた。,"4 ~ 15行:典型的だが、エラトステネスの篩の実装であり重要
21: 累積和の更新部分であり、重要",とても理解できた。,
12/16/2022 15:22:36,6,23,22,累積和配列への加算を条件を示した行で、問題を解くのに必要な前計算の根幹部分である。,13,既に見つかっている素数の倍数を合成数として記録していくという、エラトステネスのふるいの根幹をなす部分である。問題固有の考察が含まれないので、1 番ほど重要でない。,9,エラトステネスの篩では、この条件付けによって合成数でない場合は処理をスキップできるため、漸近計算量が最大値 N に対し O(N log N) でなく O(N log log N) となる。計算量の (軽微な) 変化に関わるだけなので、1 番や 2 番ではない。,,とても理解できた。,
12/15/2022 17:11:06,7,23,28,この行から，あらかじめ求めておいた各値までの「2017に似た数字」の数の総数の配列を用意しておき，それを利用することで各クエリに対してより効率的に答えを返すことができるということが分かるから．,18,"エラトステネスの櫛のアルゴリズムを用いることで，あらかじめ出現する全ての数の素数判定を用意しておくことで素数判定をあとから簡単に行うことができるということがこの行から読み取れるから．
1番でない理由としては，素数判定を簡単に行うだけでは正解を導くということに直結しないから．",11,"このwhile文の中で一度素数だと分かった数の倍数を省いていくことでより効率的に素数判定を行えるようになったことがエラトステネスの櫛のアルゴリズムの一番の利点だと思うから．
3番目である理由としては，これはエラトステネスの櫛のアルゴリズムの一部であり，問題の答えには直結しないから．",8: 条件分をi<=Nではなく，iの二乗がNを超えないところまでと範囲を絞ることでより計算量を抑えているから．,まあ理解できた。,
12/19/2022 12:28:58,8,23,12,素数の倍数を候補から消していくという、エラトステネスのふるいというアルゴリズムを最もよく表した一文だから。,28,累積和を用いて、素数の個数を計算量少なく求めようとしており、アルゴリズム的に重要だから。この方法は必ずしも必須ではないので2番とした。,6,0と1は素数ではないという記述は、当たり前だが忘れてしまうと、すべて素数でないと判断されてしまうので重要。アルゴリズムというよりはコーナーケースの処理なので3番とした。,,とても理解できた。,
12/21/2022 3:02:49,9,23,18,エラトステネスの篩で素数判定を行い、それをテーブルに持つ処理を行う行であるから。今回の問題では10^5以下の素数の値が全て求まっている必要があるので、素数判定を行った結果を配列に格納する箇所が、最も重要であると考える。,22,その数が2017に似た数であるかどうかを判定する箇所であるから。素数判定の結果を用いて2017に似た数かどうかの判定を行うため、素数判定の結果が前提と考え、1番とはしなかった。,22,累積和配列を構築するパートであるから。これは素数判定と2017に似た数の判定が前提となっているため、重要度は1番目、2番目に比べると下がると考えた。,4～15行目：実際にエラトステネスの篩を用いた素数判定を行っている箇所であるため、ここの行も重要だと考えている。,とても理解できた。,
