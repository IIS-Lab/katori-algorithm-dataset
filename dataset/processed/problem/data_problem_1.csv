time,personID,problemID,1st,1st_reason,2nd,2nd_reason,3rd,3rd_reason,others,understanding,free
12/8/2022 20:53:06,1,1,8,尺取法において重要な，条件を満たす限り区間の右端を進めるという操作が書かれているため．,7,尺取法において重要な，条件を満たさなくなったら限り区間の左端を進めるという操作が書かれているため．区間の右端の操作の方が難しいと考えたため2番とした．,2,尺取法の本質部分からは外れるため1番や2番ではないが，問題の性質に起因するコーナーケースを除去する重要な部分であるため．,,とても理解できた。,
12/30/2022 16:27:34,10,1,8,累積がxの値を超えるまで右端を動かしていくことは、とても重要であるから。,15,左端を動かすときに、最左端の値で割り忘れないことは重要であるから。1番ではないのは、プログラムを動かすときに気付きやすいと思ったため。,12,左端右端が被った時の処理も大切であると思ったため。1番や2番ではない理由は、デバッグで気付きやすいと思ったため。,,まあ理解できた。,
1/2/2023 21:45:05,11,1,8,指定された条件を満たす限り，列の中においてみる範囲を増やしていくという方針が表れている箇所だと思ったから,2,選択した範囲の積に注目しており，積の特性である一つでも0であれば0になることに気づいているから．基本方針ではないので一番に選びませんでした．,12,列の範囲を拡大していく中でこの処理をする必要がある．毎回ではなく，列の長さが0のときだけの処理なので3番目にしました．,,とても理解できた。,
12/15/2022 10:52:01,2,1,8,この問題はしゃくとり法を用いて解くことができるが、そのしゃくとり法の繰り返しを行なっている部分であるから。,12,同じくしゃくとり法のインデックスに関する部分で正しく場合分けしないといけないため重要であると考えられるが、複雑さでいえば8行目より少ないから。,2,配列に0があるときのみコーナーケースとして処理する必要があり、大枠としては関係ないが、問題を解く上では必要である処理だから。,,とても理解できた。,
12/10/2022 23:35:03,3,1,8,尺取り法は特定の連続部分列に対する処理を全探索ではなく、左端と右端を上手くずらすことでO(N)に抑えるアルゴリズムだが、7行目と合わせてコアの部分だから。,7,8行目と合わせて尺取り法のコアの部分だが、問題特有の処理はないから。,2,要素に0が含まれている時の例外処理はこの問題固有のものだから。,,とても理解できた。,
12/15/2022 12:59:30,4,1,8,arrを順番に見ていく上で最も重要な判別を行なっていると思うから,15,前回のsumを利用することで効率化に貢献しているため。ただこの効率化がなくても問題に正解はできる。,11,最終的な答えを更新している部分であるため。ただ誰でも簡単に思いつきそう。,"2, 0の掛け算に対する処理を意外と忘れてしまいそうな気がするから",とても理解できた。,
12/28/2022 12:33:41,5,1,8,「条件を満たすように範囲を広げる」という、尺取り法を用いた解法を端的に表しているから,7,8行目に右端を動かしていることのほうが本質的だが、左端を走査していることも本質的だから。,2,簡単にコーナーケースを処理できており大切だが、なくても解けること・尺取り法と関係ないため１番ではないと思った,11行：走査しながらのresの逐次更新は競プロなどでよく使う表現だから,とても理解できた。,
12/14/2022 13:39:27,6,1,8,尺取法において、区間を伸ばし続ける条件を記述する行になっているから。,10,尺取法の一部である、区間を伸ばすという処理を行っているから。1 番でないと考えたのは、問題によって変わる部分ではないから。,7,尺取法の一部である、区間をずらすという処理を行っているから。1 番や 2 番でないと考えたのは、問題によって変わる部分でなく、区間を伸ばす処理に対する従たる処理だから。,11。最終的に欲しい解答を計算している部分だから。,とても理解できた。,
12/13/2022 20:49:40,7,1,8,配列の右側に関してこの行の条件をつけながら探索していくことで，正解を導き出すことができるから．,2,"配列に0が含まれている場合をあらかじめ抜いておくことで，例外なパターンを排除でき，メインとなるアルゴリズムを実装できるから．
一番ではない理由としては，これは0を含むという例外的なパターンのみにしか対応せず，基本的なアルゴリズムとは関連が薄いから．",15,"rightをleftのたびに更新せず，前回のループで計算したものをそのまま利用することで計算量を落とすことが可能となっているから．
1番や2番ではないのは，これは計算量を減らすためであり，この処理がなく，全て計算を行なっても答え自体は導き出せるから．",12: この条件式があることでバグがなくアルゴリズムを実行できるから．,まあ理解できた。,
12/14/2022 5:06:56,8,1,8,rightをひとつずつインクリメントしながらギリギリのところを確かめるという、問題を解く最も本質的なところだと思ったから。,2,１つでも０が含まれていたら計算するまでもないという例外処理を行なっているから。あくまで例外処理なので２番とした。,15,左側を右にずらすときの大事な計算だから。8行目の方が本質的だと思ったので３番とした。,,とても理解できた。,
12/15/2022 18:51:04,9,1,8,尺取り法における、範囲を伸ばせる条件を指定しており、この部分の判定が正しいかどうかが、アルゴリズムが正しく動くための核であると考えたから。,11,答えの値の更新を行っており、これが無いとアルゴリズムが正しい答えを返さないから。ただし、この部分はアルゴリズムの核とは言えないため、1番ではないと考える。,2,配列の値の中に0があった場合というコーナーケースに対する例外処理を行っており、これがないとコーナーケースに対して正しい値を返さないから。ただし、この部分はメインのアルゴリズム部分ではないため、重要度は先ほどの2つに比べると落ちると考える。,12行目。細かいところではあるが、尺取り法における左のポインタと右のポインタが等しい値を指したときの処理を行っており、アルゴリズムを実装する上では大事な要素となる。,とても理解できた。,
